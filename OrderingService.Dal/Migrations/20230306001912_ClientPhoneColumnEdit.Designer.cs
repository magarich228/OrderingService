// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrderingService.Dal;

#nullable disable

namespace OrderingService.Dal.Migrations
{
    [DbContext(typeof(OrderingContext))]
    [Migration("20230306001912_ClientPhoneColumnEdit")]
    partial class ClientPhoneColumnEdit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.1.23111.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OrderingService.Dal.Models.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasAlternateKey("Phone");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = new Guid("39540cc0-884e-4ed3-927d-4bbd3c60bf8c"),
                            FullName = "Меркушев Бенедикт Алексеевич",
                            Phone = "89996225028"
                        },
                        new
                        {
                            Id = new Guid("cae2788e-e9cd-4777-beb3-f4f8305cb23b"),
                            FullName = "Ефимов Аким Лаврентьевич",
                            Phone = "89506225027"
                        },
                        new
                        {
                            Id = new Guid("be64dfa7-50dc-4c15-83f1-b5136c304604"),
                            FullName = "Савин Август Оскарович",
                            Phone = "89506225026"
                        },
                        new
                        {
                            Id = new Guid("37e6a4d8-201e-4c0c-be4b-e6a9ea150661"),
                            FullName = "Воронцов Любомир Антонович",
                            Phone = "89906225025"
                        },
                        new
                        {
                            Id = new Guid("acfef8fa-8c16-49b5-9c28-f71cd5e08027"),
                            FullName = "Ларионов Аввакуум Христофорович",
                            Phone = "89506335028"
                        },
                        new
                        {
                            Id = new Guid("a6722490-3731-4c32-994f-d9cdc6177956"),
                            FullName = "Беляков Демьян Степанович",
                            Phone = "89606225028"
                        },
                        new
                        {
                            Id = new Guid("6f1867f7-3613-4946-bd30-b391eba544e3"),
                            FullName = "Баранова Марьяна Рудольфовна",
                            Phone = "89506224428"
                        },
                        new
                        {
                            Id = new Guid("d732f3b3-ceb9-48ac-8012-0a71d5ca1a11"),
                            FullName = "Зайцева Римма Аристарховна",
                            Phone = "89503335028"
                        },
                        new
                        {
                            Id = new Guid("bf12d20f-fbc2-4e79-907c-9b2b26e76627"),
                            FullName = "Лазарева Лигия Пётровна",
                            Phone = "89506225268"
                        },
                        new
                        {
                            Id = new Guid("2b44f8cf-6848-4bef-8e19-86cbf68a4b38"),
                            FullName = "Фёдорова Асида Федоровна",
                            Phone = "89506225278"
                        },
                        new
                        {
                            Id = new Guid("0ff86f3c-4aa9-44fa-b4d3-b66be877a2d4"),
                            FullName = "Дорофеева Георгина Онисимовна",
                            Phone = "89506330270"
                        });
                });

            modelBuilder.Entity("OrderingService.Dal.Models.ClientCredentials", b =>
                {
                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ClientId", "Username");

                    b.ToTable("ClientCredentials");

                    b.HasData(
                        new
                        {
                            ClientId = new Guid("39540cc0-884e-4ed3-927d-4bbd3c60bf8c"),
                            Username = "user39540cc0-884e-4ed3-927d-4bbd3c60bf8c",
                            Password = "qwe12345"
                        },
                        new
                        {
                            ClientId = new Guid("cae2788e-e9cd-4777-beb3-f4f8305cb23b"),
                            Username = "usercae2788e-e9cd-4777-beb3-f4f8305cb23b",
                            Password = "qwe12345"
                        },
                        new
                        {
                            ClientId = new Guid("be64dfa7-50dc-4c15-83f1-b5136c304604"),
                            Username = "userbe64dfa7-50dc-4c15-83f1-b5136c304604",
                            Password = "qwe12345"
                        },
                        new
                        {
                            ClientId = new Guid("37e6a4d8-201e-4c0c-be4b-e6a9ea150661"),
                            Username = "user37e6a4d8-201e-4c0c-be4b-e6a9ea150661",
                            Password = "qwe12345"
                        },
                        new
                        {
                            ClientId = new Guid("acfef8fa-8c16-49b5-9c28-f71cd5e08027"),
                            Username = "useracfef8fa-8c16-49b5-9c28-f71cd5e08027",
                            Password = "qwe12345"
                        },
                        new
                        {
                            ClientId = new Guid("a6722490-3731-4c32-994f-d9cdc6177956"),
                            Username = "usera6722490-3731-4c32-994f-d9cdc6177956",
                            Password = "qwe12345"
                        },
                        new
                        {
                            ClientId = new Guid("6f1867f7-3613-4946-bd30-b391eba544e3"),
                            Username = "user6f1867f7-3613-4946-bd30-b391eba544e3",
                            Password = "qwe12345"
                        },
                        new
                        {
                            ClientId = new Guid("d732f3b3-ceb9-48ac-8012-0a71d5ca1a11"),
                            Username = "userd732f3b3-ceb9-48ac-8012-0a71d5ca1a11",
                            Password = "qwe12345"
                        },
                        new
                        {
                            ClientId = new Guid("bf12d20f-fbc2-4e79-907c-9b2b26e76627"),
                            Username = "userbf12d20f-fbc2-4e79-907c-9b2b26e76627",
                            Password = "qwe12345"
                        },
                        new
                        {
                            ClientId = new Guid("2b44f8cf-6848-4bef-8e19-86cbf68a4b38"),
                            Username = "user2b44f8cf-6848-4bef-8e19-86cbf68a4b38",
                            Password = "qwe12345"
                        },
                        new
                        {
                            ClientId = new Guid("0ff86f3c-4aa9-44fa-b4d3-b66be877a2d4"),
                            Username = "user0ff86f3c-4aa9-44fa-b4d3-b66be877a2d4",
                            Password = "qwe12345"
                        });
                });

            modelBuilder.Entity("OrderingService.Dal.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 3, 6, 0, 19, 12, 643, DateTimeKind.Utc).AddTicks(8769));

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ccd8b5cb-9fca-4eff-8d88-39f7aa3459f9"),
                            ClientId = new Guid("0ff86f3c-4aa9-44fa-b4d3-b66be877a2d4"),
                            CreatedAt = new DateTime(2022, 6, 18, 0, 19, 11, 269, DateTimeKind.Utc).AddTicks(509)
                        },
                        new
                        {
                            Id = new Guid("ab1befaf-93bd-4fe0-af35-59525ee78e29"),
                            ClientId = new Guid("cae2788e-e9cd-4777-beb3-f4f8305cb23b"),
                            CreatedAt = new DateTime(2022, 10, 31, 0, 19, 11, 269, DateTimeKind.Utc).AddTicks(1867)
                        },
                        new
                        {
                            Id = new Guid("50a10916-8493-4cd1-b7f0-3c233cb6d1ef"),
                            ClientId = new Guid("2b44f8cf-6848-4bef-8e19-86cbf68a4b38"),
                            CreatedAt = new DateTime(2023, 11, 12, 0, 19, 11, 269, DateTimeKind.Utc).AddTicks(1876)
                        },
                        new
                        {
                            Id = new Guid("32a55c00-475e-418a-89e3-6a396fe6e9fb"),
                            ClientId = new Guid("39540cc0-884e-4ed3-927d-4bbd3c60bf8c"),
                            CreatedAt = new DateTime(2022, 10, 8, 0, 19, 11, 269, DateTimeKind.Utc).AddTicks(1878)
                        },
                        new
                        {
                            Id = new Guid("3609fba9-c39b-4ba2-b551-d9dbe84be705"),
                            ClientId = new Guid("acfef8fa-8c16-49b5-9c28-f71cd5e08027"),
                            CreatedAt = new DateTime(2024, 3, 6, 0, 19, 11, 269, DateTimeKind.Utc).AddTicks(1885)
                        },
                        new
                        {
                            Id = new Guid("7ece1041-5bff-4bbd-ab90-e617bf5ab90e"),
                            ClientId = new Guid("2b44f8cf-6848-4bef-8e19-86cbf68a4b38"),
                            CreatedAt = new DateTime(2024, 2, 9, 0, 19, 11, 269, DateTimeKind.Utc).AddTicks(1889)
                        },
                        new
                        {
                            Id = new Guid("e7c0aaa8-c127-4e35-a5a7-0bf993c908d6"),
                            ClientId = new Guid("bf12d20f-fbc2-4e79-907c-9b2b26e76627"),
                            CreatedAt = new DateTime(2024, 3, 23, 0, 19, 11, 269, DateTimeKind.Utc).AddTicks(1891)
                        },
                        new
                        {
                            Id = new Guid("00cf9b92-6512-4ace-8346-4177972473c3"),
                            ClientId = new Guid("6f1867f7-3613-4946-bd30-b391eba544e3"),
                            CreatedAt = new DateTime(2022, 10, 24, 0, 19, 11, 269, DateTimeKind.Utc).AddTicks(1892)
                        },
                        new
                        {
                            Id = new Guid("ccb914e4-8f55-4693-8c09-e54afd119f82"),
                            ClientId = new Guid("0ff86f3c-4aa9-44fa-b4d3-b66be877a2d4"),
                            CreatedAt = new DateTime(2022, 3, 6, 0, 19, 11, 269, DateTimeKind.Utc).AddTicks(1894)
                        },
                        new
                        {
                            Id = new Guid("b4ba6039-9833-4a76-8904-fac727da750e"),
                            ClientId = new Guid("be64dfa7-50dc-4c15-83f1-b5136c304604"),
                            CreatedAt = new DateTime(2024, 3, 17, 0, 19, 11, 269, DateTimeKind.Utc).AddTicks(1896)
                        },
                        new
                        {
                            Id = new Guid("bb200105-1331-4a4b-bb49-0a216a7b59f7"),
                            ClientId = new Guid("be64dfa7-50dc-4c15-83f1-b5136c304604"),
                            CreatedAt = new DateTime(2022, 4, 23, 0, 19, 11, 269, DateTimeKind.Utc).AddTicks(1898)
                        },
                        new
                        {
                            Id = new Guid("2211d318-12d3-49bc-9094-c909404cbd39"),
                            ClientId = new Guid("bf12d20f-fbc2-4e79-907c-9b2b26e76627"),
                            CreatedAt = new DateTime(2022, 4, 9, 0, 19, 11, 269, DateTimeKind.Utc).AddTicks(1900)
                        },
                        new
                        {
                            Id = new Guid("956173c5-83ae-4226-bf0f-f2ab520d36f5"),
                            ClientId = new Guid("2b44f8cf-6848-4bef-8e19-86cbf68a4b38"),
                            CreatedAt = new DateTime(2022, 7, 5, 0, 19, 11, 269, DateTimeKind.Utc).AddTicks(1904)
                        },
                        new
                        {
                            Id = new Guid("dd7c5359-7809-4188-8764-c2ae74bf6cac"),
                            ClientId = new Guid("0ff86f3c-4aa9-44fa-b4d3-b66be877a2d4"),
                            CreatedAt = new DateTime(2023, 6, 20, 0, 19, 11, 269, DateTimeKind.Utc).AddTicks(1905)
                        },
                        new
                        {
                            Id = new Guid("b0efa5a1-097e-4240-8584-1f331028f2c3"),
                            ClientId = new Guid("bf12d20f-fbc2-4e79-907c-9b2b26e76627"),
                            CreatedAt = new DateTime(2022, 6, 22, 0, 19, 11, 269, DateTimeKind.Utc).AddTicks(1907)
                        },
                        new
                        {
                            Id = new Guid("6f77ae1e-e91f-404d-95f9-901d843d2522"),
                            ClientId = new Guid("cae2788e-e9cd-4777-beb3-f4f8305cb23b"),
                            CreatedAt = new DateTime(2023, 7, 7, 0, 19, 11, 269, DateTimeKind.Utc).AddTicks(1908)
                        },
                        new
                        {
                            Id = new Guid("1d832cd8-76d9-4aa5-b61f-90b1bcd1a197"),
                            ClientId = new Guid("be64dfa7-50dc-4c15-83f1-b5136c304604"),
                            CreatedAt = new DateTime(2023, 1, 18, 0, 19, 11, 269, DateTimeKind.Utc).AddTicks(1910)
                        },
                        new
                        {
                            Id = new Guid("751b9c14-166c-4403-84db-a78452a2c254"),
                            ClientId = new Guid("cae2788e-e9cd-4777-beb3-f4f8305cb23b"),
                            CreatedAt = new DateTime(2023, 11, 13, 0, 19, 11, 269, DateTimeKind.Utc).AddTicks(1913)
                        },
                        new
                        {
                            Id = new Guid("11f53c0d-cb9d-4fa1-be1b-6f2b9dd7c3b5"),
                            ClientId = new Guid("a6722490-3731-4c32-994f-d9cdc6177956"),
                            CreatedAt = new DateTime(2022, 8, 15, 0, 19, 11, 269, DateTimeKind.Utc).AddTicks(1914)
                        },
                        new
                        {
                            Id = new Guid("efb4511f-bd7f-4e0a-a814-323d034735d5"),
                            ClientId = new Guid("0ff86f3c-4aa9-44fa-b4d3-b66be877a2d4"),
                            CreatedAt = new DateTime(2024, 2, 15, 0, 19, 11, 269, DateTimeKind.Utc).AddTicks(1916)
                        },
                        new
                        {
                            Id = new Guid("df37f39f-1995-492e-ab64-aac4e037e452"),
                            ClientId = new Guid("d732f3b3-ceb9-48ac-8012-0a71d5ca1a11"),
                            CreatedAt = new DateTime(2022, 9, 9, 0, 19, 11, 269, DateTimeKind.Utc).AddTicks(1919)
                        },
                        new
                        {
                            Id = new Guid("7dbe25c9-ff88-42ac-bfbf-39da813b1bd0"),
                            ClientId = new Guid("2b44f8cf-6848-4bef-8e19-86cbf68a4b38"),
                            CreatedAt = new DateTime(2023, 12, 12, 0, 19, 11, 269, DateTimeKind.Utc).AddTicks(1920)
                        });
                });

            modelBuilder.Entity("OrderingService.Dal.Models.OrderProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductsInOrders", t =>
                        {
                            t.HasCheckConstraint("Price", "Price > 0");

                            t.HasCheckConstraint("Quantity", "Quantity >= 0");
                        });

                    b.HasData(
                        new
                        {
                            Id = new Guid("602f32d7-faaf-4c53-95fd-2c7f2668018a"),
                            OrderId = new Guid("ccd8b5cb-9fca-4eff-8d88-39f7aa3459f9"),
                            Price = 799m,
                            ProductId = new Guid("f1fcd5bc-8928-409f-add6-c26ec85f497c"),
                            Quantity = 1
                        },
                        new
                        {
                            Id = new Guid("aa6fc293-01ec-4dba-8bb2-aea4b2448fc2"),
                            OrderId = new Guid("ccd8b5cb-9fca-4eff-8d88-39f7aa3459f9"),
                            Price = 3398m,
                            ProductId = new Guid("97db5d13-ec20-4bfd-b035-bc57e1319bc4"),
                            Quantity = 2
                        },
                        new
                        {
                            Id = new Guid("48608476-9b2b-4c64-9535-ef3d096bb864"),
                            OrderId = new Guid("ab1befaf-93bd-4fe0-af35-59525ee78e29"),
                            Price = 155097m,
                            ProductId = new Guid("e3c88564-f375-472e-a639-b66a1382fff7"),
                            Quantity = 3
                        },
                        new
                        {
                            Id = new Guid("09b8b235-dfdf-4834-a9b5-a212d11bc85d"),
                            OrderId = new Guid("50a10916-8493-4cd1-b7f0-3c233cb6d1ef"),
                            Price = 399.98m,
                            ProductId = new Guid("d8f88e30-0624-4311-9f4a-4c74822fe4ea"),
                            Quantity = 2
                        },
                        new
                        {
                            Id = new Guid("6ddc433d-25cf-49f4-862b-4e3c35921176"),
                            OrderId = new Guid("50a10916-8493-4cd1-b7f0-3c233cb6d1ef"),
                            Price = 45597m,
                            ProductId = new Guid("bf04feb2-590d-4297-ac38-067516e17a3d"),
                            Quantity = 3
                        },
                        new
                        {
                            Id = new Guid("c739debb-a485-4f01-b583-2cff2f3f70c8"),
                            OrderId = new Guid("32a55c00-475e-418a-89e3-6a396fe6e9fb"),
                            Price = 597m,
                            ProductId = new Guid("5e92f4c8-25aa-4a49-b244-c6ee417df4b4"),
                            Quantity = 3
                        },
                        new
                        {
                            Id = new Guid("1c2d9a60-0425-4b14-b21f-073c5fa93675"),
                            OrderId = new Guid("32a55c00-475e-418a-89e3-6a396fe6e9fb"),
                            Price = 258495m,
                            ProductId = new Guid("e3c88564-f375-472e-a639-b66a1382fff7"),
                            Quantity = 5
                        },
                        new
                        {
                            Id = new Guid("6d373a94-4d35-43d6-9226-66e61f341b76"),
                            OrderId = new Guid("3609fba9-c39b-4ba2-b551-d9dbe84be705"),
                            Price = 11399.8m,
                            ProductId = new Guid("ebfe59da-773c-421f-8818-beb494b6663d"),
                            Quantity = 2
                        },
                        new
                        {
                            Id = new Guid("ac4874c9-c98c-4684-9612-741c572158f3"),
                            OrderId = new Guid("bb200105-1331-4a4b-bb49-0a216a7b59f7"),
                            Price = 199.98m,
                            ProductId = new Guid("d73f1127-11f0-4bb0-a70c-2371cd1e6c41"),
                            Quantity = 2
                        },
                        new
                        {
                            Id = new Guid("6579e59e-0f7a-47dd-b4b7-53edae366db3"),
                            OrderId = new Guid("bb200105-1331-4a4b-bb49-0a216a7b59f7"),
                            Price = 750m,
                            ProductId = new Guid("ce9cf65f-e543-4806-9ddf-8eee7a1d5431"),
                            Quantity = 1
                        },
                        new
                        {
                            Id = new Guid("6c4581ff-bc86-40e2-9ac7-80ed499606da"),
                            OrderId = new Guid("2211d318-12d3-49bc-9094-c909404cbd39"),
                            Price = 280m,
                            ProductId = new Guid("f576f1cd-9e46-4c62-945e-6ef8a11e14df"),
                            Quantity = 1
                        },
                        new
                        {
                            Id = new Guid("14ac4002-2404-4f19-adf7-f97f1f49cd71"),
                            OrderId = new Guid("dd7c5359-7809-4188-8764-c2ae74bf6cac"),
                            Price = 4399m,
                            ProductId = new Guid("4af69082-2e63-49de-b18c-960c215a18fd"),
                            Quantity = 1
                        },
                        new
                        {
                            Id = new Guid("d358401d-b57f-448c-ab22-a50fc4cda82a"),
                            OrderId = new Guid("b0efa5a1-097e-4240-8584-1f331028f2c3"),
                            Price = 796m,
                            ProductId = new Guid("5e92f4c8-25aa-4a49-b244-c6ee417df4b4"),
                            Quantity = 4
                        },
                        new
                        {
                            Id = new Guid("21f8d556-e96c-4d97-b38f-ae01ddc25c70"),
                            OrderId = new Guid("751b9c14-166c-4403-84db-a78452a2c254"),
                            Price = 8798m,
                            ProductId = new Guid("4af69082-2e63-49de-b18c-960c215a18fd"),
                            Quantity = 2
                        },
                        new
                        {
                            Id = new Guid("b0559478-0c0b-4b05-9ba1-b32379912143"),
                            OrderId = new Guid("efb4511f-bd7f-4e0a-a814-323d034735d5"),
                            Price = 49499.99m,
                            ProductId = new Guid("ea105f07-4c1d-408b-8d20-ed46c81f7989"),
                            Quantity = 1
                        },
                        new
                        {
                            Id = new Guid("303bfb76-f04b-4ee5-8ce4-46d5a78d6d2b"),
                            OrderId = new Guid("efb4511f-bd7f-4e0a-a814-323d034735d5"),
                            Price = 999.95m,
                            ProductId = new Guid("8c9369d1-3fc5-47d6-9954-69638aeb3c34"),
                            Quantity = 5
                        },
                        new
                        {
                            Id = new Guid("91a02821-80af-48da-a04a-b231da2bc667"),
                            OrderId = new Guid("efb4511f-bd7f-4e0a-a814-323d034735d5"),
                            Price = 560m,
                            ProductId = new Guid("f576f1cd-9e46-4c62-945e-6ef8a11e14df"),
                            Quantity = 2
                        },
                        new
                        {
                            Id = new Guid("10f35968-ff2a-4614-aced-88b8b77c8fe7"),
                            OrderId = new Guid("7dbe25c9-ff88-42ac-bfbf-39da813b1bd0"),
                            Price = 398m,
                            ProductId = new Guid("5e92f4c8-25aa-4a49-b244-c6ee417df4b4"),
                            Quantity = 2
                        },
                        new
                        {
                            Id = new Guid("23f4d547-9ba7-4d59-b432-5ba07c0ac735"),
                            OrderId = new Guid("7dbe25c9-ff88-42ac-bfbf-39da813b1bd0"),
                            Price = 6066m,
                            ProductId = new Guid("04a68ff5-11cb-40f2-a255-023313b4d9f3"),
                            Quantity = 2
                        },
                        new
                        {
                            Id = new Guid("f6a762eb-4e19-4f72-a686-2d995d27ea85"),
                            OrderId = new Guid("7dbe25c9-ff88-42ac-bfbf-39da813b1bd0"),
                            Price = 399.98m,
                            ProductId = new Guid("8c9369d1-3fc5-47d6-9954-69638aeb3c34"),
                            Quantity = 2
                        });
                });

            modelBuilder.Entity("OrderingService.Dal.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductTypeRefId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name");

                    b.HasIndex("ProductTypeRefId");

                    b.ToTable("Products", t =>
                        {
                            t.HasCheckConstraint("Price", "Price > 0")
                                .HasName("Price1");

                            t.HasCheckConstraint("Quantity", "Quantity >= 0")
                                .HasName("Quantity1");
                        });

                    b.HasData(
                        new
                        {
                            Id = new Guid("dec3c83d-d254-432e-a820-201dde19af14"),
                            Name = "IPhone 8s",
                            Price = 67530.50m,
                            ProductTypeRefId = 0,
                            Quantity = 12
                        },
                        new
                        {
                            Id = new Guid("e3c88564-f375-472e-a639-b66a1382fff7"),
                            Name = "ASUS VivoBook 16X M1603QA",
                            Price = 51699m,
                            ProductTypeRefId = 0,
                            Quantity = 11
                        },
                        new
                        {
                            Id = new Guid("bf04feb2-590d-4297-ac38-067516e17a3d"),
                            Name = "LED Harper 43F660Y",
                            Price = 15199m,
                            ProductTypeRefId = 0,
                            Quantity = 6
                        },
                        new
                        {
                            Id = new Guid("429445da-7f29-4724-bbef-ec93c7981425"),
                            Name = "LET Prestigio PTV50SS08X",
                            Price = 23199.9m,
                            ProductTypeRefId = 0,
                            Quantity = 7
                        },
                        new
                        {
                            Id = new Guid("79846436-38d6-4255-9b41-061a1322374b"),
                            Name = "AMD Ryzen 7 4700G OEM",
                            Price = 15499.99m,
                            ProductTypeRefId = 0,
                            Quantity = 20
                        },
                        new
                        {
                            Id = new Guid("d8f88e30-0624-4311-9f4a-4c74822fe4ea"),
                            Name = "Швабра Master House Бачата",
                            Price = 199.99m,
                            ProductTypeRefId = 3,
                            Quantity = 33
                        },
                        new
                        {
                            Id = new Guid("9960d886-ebb9-4c0b-b4c0-13d15d3d197e"),
                            Name = "Швабра Master House Джайв",
                            Price = 199.99m,
                            ProductTypeRefId = 3,
                            Quantity = 21
                        },
                        new
                        {
                            Id = new Guid("1eee1463-5589-4924-89a7-138787dec704"),
                            Name = "Чистящее средство для нагревательных элементов электроплит/газовых плит Topper IR 5",
                            Price = 50m,
                            ProductTypeRefId = 3,
                            Quantity = 0
                        },
                        new
                        {
                            Id = new Guid("5e92f4c8-25aa-4a49-b244-c6ee417df4b4"),
                            Name = "Набор для ухода для стеклокерамических поверхностей Fiora bio ЭКО 20-002",
                            Price = 199m,
                            ProductTypeRefId = 3,
                            Quantity = 5
                        },
                        new
                        {
                            Id = new Guid("f576f1cd-9e46-4c62-945e-6ef8a11e14df"),
                            Name = "Очиститель для тканей и мебели ОС-Гель",
                            Price = 280m,
                            ProductTypeRefId = 3,
                            Quantity = 15
                        },
                        new
                        {
                            Id = new Guid("ea105f07-4c1d-408b-8d20-ed46c81f7989"),
                            Name = "Газонокосилка-робот Champion RMB1828",
                            Price = 49499.99m,
                            ProductTypeRefId = 3,
                            Quantity = 8
                        },
                        new
                        {
                            Id = new Guid("8c9369d1-3fc5-47d6-9954-69638aeb3c34"),
                            Name = "ТВ розетка одинарная Schneider Electric Glossa GSL000391",
                            Price = 199.99m,
                            ProductTypeRefId = 3,
                            Quantity = 20
                        },
                        new
                        {
                            Id = new Guid("ebfe59da-773c-421f-8818-beb494b6663d"),
                            Name = "Набор инструментов Квалитет 5027038",
                            Price = 5699.9m,
                            ProductTypeRefId = 2,
                            Quantity = 9
                        },
                        new
                        {
                            Id = new Guid("eafdac08-8890-4b5c-a1f7-a786151694d9"),
                            Name = "Набор инструментов Swiss Tools ST-1077",
                            Price = 5799.99m,
                            ProductTypeRefId = 2,
                            Quantity = 20
                        },
                        new
                        {
                            Id = new Guid("04a68ff5-11cb-40f2-a255-023313b4d9f3"),
                            Name = "Набор инструментов Дело Техники 600937",
                            Price = 3033m,
                            ProductTypeRefId = 2,
                            Quantity = 30
                        },
                        new
                        {
                            Id = new Guid("d73f1127-11f0-4bb0-a70c-2371cd1e6c41"),
                            Name = "Инструмент для вскрытия техники Rexant 12-4335",
                            Price = 99.99m,
                            ProductTypeRefId = 2,
                            Quantity = 20
                        },
                        new
                        {
                            Id = new Guid("ad58b674-4a47-4d34-9b67-7b4e45849f94"),
                            Name = "Отвертка с набором насадок Matrix 11598",
                            Price = 110m,
                            ProductTypeRefId = 2,
                            Quantity = 25
                        },
                        new
                        {
                            Id = new Guid("97db5d13-ec20-4bfd-b035-bc57e1319bc4"),
                            Name = "Набор инструментов КВТ Профи НИИ-09",
                            Price = 1699m,
                            ProductTypeRefId = 2,
                            Quantity = 10
                        },
                        new
                        {
                            Id = new Guid("4af69082-2e63-49de-b18c-960c215a18fd"),
                            Name = "Паяльная станция Rexant 12-0714",
                            Price = 4399m,
                            ProductTypeRefId = 2,
                            Quantity = 2
                        },
                        new
                        {
                            Id = new Guid("e19d3272-c4ec-422a-8eea-bccb4854dbc6"),
                            Name = "Видеорегистратор 70mai Dash Cam M300",
                            Price = 3199.99m,
                            ProductTypeRefId = 1,
                            Quantity = 5
                        },
                        new
                        {
                            Id = new Guid("3c9d1390-0d3b-4c8e-bbe9-1d7f19916a89"),
                            Name = "Адаптер для скрытого подключения видеорегистратора Roadgid Cord DC",
                            Price = 1199m,
                            ProductTypeRefId = 1,
                            Quantity = 10
                        },
                        new
                        {
                            Id = new Guid("f1fcd5bc-8928-409f-add6-c26ec85f497c"),
                            Name = "Камера заднего вида Silverstone F1 Interpower IP-662 LED",
                            Price = 799m,
                            ProductTypeRefId = 1,
                            Quantity = 6
                        },
                        new
                        {
                            Id = new Guid("ce9cf65f-e543-4806-9ddf-8eee7a1d5431"),
                            Name = "Инвертор DEXP CAR 150W",
                            Price = 750m,
                            ProductTypeRefId = 1,
                            Quantity = 0
                        });
                });

            modelBuilder.Entity("OrderingService.Dal.Models.ProductTypeRef", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name");

                    b.ToTable("ProductTypes");

                    b.HasData(
                        new
                        {
                            Id = 0,
                            Description = "Электроника",
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = 1,
                            Description = "Автомобильные товары",
                            Name = "Cars"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Стройматериалы и инструменты",
                            Name = "BuildingMaterialsInstruments"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Всё для дома",
                            Name = "HouseHoldGoods"
                        });
                });

            modelBuilder.Entity("OrderingService.Dal.Models.ClientCredentials", b =>
                {
                    b.HasOne("OrderingService.Dal.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("OrderingService.Dal.Models.Order", b =>
                {
                    b.HasOne("OrderingService.Dal.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("OrderingService.Dal.Models.OrderProduct", b =>
                {
                    b.HasOne("OrderingService.Dal.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OrderingService.Dal.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("OrderingService.Dal.Models.Product", b =>
                {
                    b.HasOne("OrderingService.Dal.Models.ProductTypeRef", "ProductTypeRef")
                        .WithMany()
                        .HasForeignKey("ProductTypeRefId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ProductTypeRef");
                });
#pragma warning restore 612, 618
        }
    }
}
