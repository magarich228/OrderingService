// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrderingService.Dal;

#nullable disable

namespace OrderingService.Dal.Migrations
{
    [DbContext(typeof(OrderingContext))]
    [Migration("20230302003709_Reset")]
    partial class Reset
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.1.23111.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OrderingService.Dal.Models.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasAlternateKey("Phone");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1c90bda6-30bd-4db2-82c3-bbc5e1f0df80"),
                            FullName = "Меркушев Бенедикт Алексеевич",
                            Phone = "89996225028"
                        },
                        new
                        {
                            Id = new Guid("9961c720-c1d5-417d-9438-14012033d4a4"),
                            FullName = "Ефимов Аким Лаврентьевич",
                            Phone = "89506225027"
                        },
                        new
                        {
                            Id = new Guid("60039117-b92f-4309-9b0d-105870f56ed2"),
                            FullName = "Савин Август Оскарович",
                            Phone = "89506225026"
                        },
                        new
                        {
                            Id = new Guid("e96e5d97-b251-4082-8a8b-d3588f115e7f"),
                            FullName = "Воронцов Любомир Антонович",
                            Phone = "89906225025"
                        },
                        new
                        {
                            Id = new Guid("fa770cec-4b6f-465e-9c70-6084fd1e5ed2"),
                            FullName = "Ларионов Аввакуум Христофорович",
                            Phone = "89506335028"
                        },
                        new
                        {
                            Id = new Guid("4e155ff9-0ff4-40e1-8bb1-6ed2766c2011"),
                            FullName = "Беляков Демьян Степанович",
                            Phone = "89606225028"
                        },
                        new
                        {
                            Id = new Guid("4c5e197e-32c0-4c14-bb02-0046c9c7f7dd"),
                            FullName = "Баранова Марьяна Рудольфовна",
                            Phone = "89506224428"
                        },
                        new
                        {
                            Id = new Guid("91205e37-c197-43c1-b9d9-5ae6fb858961"),
                            FullName = "Зайцева Римма Аристарховна",
                            Phone = "89503335028"
                        },
                        new
                        {
                            Id = new Guid("b36f4fa7-b464-431b-8e1a-48f4520ce1c2"),
                            FullName = "Лазарева Лигия Пётровна",
                            Phone = "89506225268"
                        },
                        new
                        {
                            Id = new Guid("677225fe-0b1d-47de-be47-46c7dd9359ce"),
                            FullName = "Фёдорова Асида Федоровна",
                            Phone = "89506225278"
                        },
                        new
                        {
                            Id = new Guid("63a9d3d5-084e-43a9-a47f-5ae7b373ad3b"),
                            FullName = "Дорофеева Георгина Онисимовна",
                            Phone = "89506330270"
                        });
                });

            modelBuilder.Entity("OrderingService.Dal.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 3, 2, 0, 37, 8, 632, DateTimeKind.Utc).AddTicks(2109));

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d7d73b97-51f5-4f60-920c-16f5b6320706"),
                            ClientId = new Guid("60039117-b92f-4309-9b0d-105870f56ed2"),
                            CreatedAt = new DateTime(2023, 9, 11, 0, 37, 8, 17, DateTimeKind.Utc).AddTicks(6800)
                        },
                        new
                        {
                            Id = new Guid("8e71748f-ce67-4997-bd33-5b035fefe618"),
                            ClientId = new Guid("b36f4fa7-b464-431b-8e1a-48f4520ce1c2"),
                            CreatedAt = new DateTime(2022, 10, 22, 0, 37, 8, 17, DateTimeKind.Utc).AddTicks(8308)
                        },
                        new
                        {
                            Id = new Guid("20b8b451-fd6a-4e20-9860-0d4bc2f02b7c"),
                            ClientId = new Guid("fa770cec-4b6f-465e-9c70-6084fd1e5ed2"),
                            CreatedAt = new DateTime(2023, 8, 17, 0, 37, 8, 17, DateTimeKind.Utc).AddTicks(8322)
                        },
                        new
                        {
                            Id = new Guid("373b7c83-1d9f-4386-a6f4-0f45aa290366"),
                            ClientId = new Guid("63a9d3d5-084e-43a9-a47f-5ae7b373ad3b"),
                            CreatedAt = new DateTime(2024, 3, 14, 0, 37, 8, 17, DateTimeKind.Utc).AddTicks(8325)
                        },
                        new
                        {
                            Id = new Guid("a8aab191-da1e-42d3-a0a1-ce5728360c30"),
                            ClientId = new Guid("91205e37-c197-43c1-b9d9-5ae6fb858961"),
                            CreatedAt = new DateTime(2022, 10, 1, 0, 37, 8, 17, DateTimeKind.Utc).AddTicks(8326)
                        },
                        new
                        {
                            Id = new Guid("34e46e30-172a-4919-81b2-871e3a60919b"),
                            ClientId = new Guid("60039117-b92f-4309-9b0d-105870f56ed2"),
                            CreatedAt = new DateTime(2022, 7, 25, 0, 37, 8, 17, DateTimeKind.Utc).AddTicks(8332)
                        },
                        new
                        {
                            Id = new Guid("96fe52dc-3a9b-4401-ae8d-d66e4a6aa648"),
                            ClientId = new Guid("4c5e197e-32c0-4c14-bb02-0046c9c7f7dd"),
                            CreatedAt = new DateTime(2022, 2, 14, 0, 37, 8, 17, DateTimeKind.Utc).AddTicks(8333)
                        },
                        new
                        {
                            Id = new Guid("0e37779d-9348-47e2-8836-9880b7e0b268"),
                            ClientId = new Guid("fa770cec-4b6f-465e-9c70-6084fd1e5ed2"),
                            CreatedAt = new DateTime(2024, 3, 5, 0, 37, 8, 17, DateTimeKind.Utc).AddTicks(8335)
                        },
                        new
                        {
                            Id = new Guid("c3600c28-48e2-42fa-a266-166809391cca"),
                            ClientId = new Guid("4c5e197e-32c0-4c14-bb02-0046c9c7f7dd"),
                            CreatedAt = new DateTime(2022, 1, 31, 0, 37, 8, 17, DateTimeKind.Utc).AddTicks(8336)
                        },
                        new
                        {
                            Id = new Guid("a246cd3e-f8f3-491a-bb66-06e66bc3800c"),
                            ClientId = new Guid("677225fe-0b1d-47de-be47-46c7dd9359ce"),
                            CreatedAt = new DateTime(2022, 4, 15, 0, 37, 8, 17, DateTimeKind.Utc).AddTicks(8339)
                        },
                        new
                        {
                            Id = new Guid("b9a18339-1285-4260-a876-84db2086b728"),
                            ClientId = new Guid("9961c720-c1d5-417d-9438-14012033d4a4"),
                            CreatedAt = new DateTime(2022, 11, 7, 0, 37, 8, 17, DateTimeKind.Utc).AddTicks(8342)
                        },
                        new
                        {
                            Id = new Guid("872832ee-555d-4dfc-b1fa-e2c460eaf982"),
                            ClientId = new Guid("9961c720-c1d5-417d-9438-14012033d4a4"),
                            CreatedAt = new DateTime(2023, 11, 13, 0, 37, 8, 17, DateTimeKind.Utc).AddTicks(8344)
                        },
                        new
                        {
                            Id = new Guid("5e77610c-2a87-481b-8435-7948b74e7a7c"),
                            ClientId = new Guid("60039117-b92f-4309-9b0d-105870f56ed2"),
                            CreatedAt = new DateTime(2022, 2, 11, 0, 37, 8, 17, DateTimeKind.Utc).AddTicks(8345)
                        },
                        new
                        {
                            Id = new Guid("d550141c-ada5-4088-aa0d-35aaef6ba7aa"),
                            ClientId = new Guid("91205e37-c197-43c1-b9d9-5ae6fb858961"),
                            CreatedAt = new DateTime(2024, 2, 8, 0, 37, 8, 17, DateTimeKind.Utc).AddTicks(8347)
                        },
                        new
                        {
                            Id = new Guid("4748b238-2e68-43c8-8961-e3176b5bcd7c"),
                            ClientId = new Guid("60039117-b92f-4309-9b0d-105870f56ed2"),
                            CreatedAt = new DateTime(2022, 6, 3, 0, 37, 8, 17, DateTimeKind.Utc).AddTicks(8348)
                        },
                        new
                        {
                            Id = new Guid("94d3252b-647f-4e6f-b4a6-a91715d9e9e3"),
                            ClientId = new Guid("e96e5d97-b251-4082-8a8b-d3588f115e7f"),
                            CreatedAt = new DateTime(2023, 11, 5, 0, 37, 8, 17, DateTimeKind.Utc).AddTicks(8350)
                        },
                        new
                        {
                            Id = new Guid("7c0f0569-7584-42d0-9de2-d50a094ac1f8"),
                            ClientId = new Guid("677225fe-0b1d-47de-be47-46c7dd9359ce"),
                            CreatedAt = new DateTime(2022, 3, 14, 0, 37, 8, 17, DateTimeKind.Utc).AddTicks(8351)
                        },
                        new
                        {
                            Id = new Guid("42cb4203-0740-4c7a-bc34-80261c7b5af5"),
                            ClientId = new Guid("9961c720-c1d5-417d-9438-14012033d4a4"),
                            CreatedAt = new DateTime(2023, 12, 9, 0, 37, 8, 17, DateTimeKind.Utc).AddTicks(8354)
                        },
                        new
                        {
                            Id = new Guid("a6ed2555-adc4-4ad2-ac42-c4fa233decf1"),
                            ClientId = new Guid("1c90bda6-30bd-4db2-82c3-bbc5e1f0df80"),
                            CreatedAt = new DateTime(2022, 8, 23, 0, 37, 8, 17, DateTimeKind.Utc).AddTicks(8357)
                        },
                        new
                        {
                            Id = new Guid("d43ab11b-1d59-4ef8-b233-b9f1d2aab6e7"),
                            ClientId = new Guid("4c5e197e-32c0-4c14-bb02-0046c9c7f7dd"),
                            CreatedAt = new DateTime(2024, 3, 11, 0, 37, 8, 17, DateTimeKind.Utc).AddTicks(8359)
                        },
                        new
                        {
                            Id = new Guid("15d4f293-dd7e-4944-99c1-811699c8bd0e"),
                            ClientId = new Guid("b36f4fa7-b464-431b-8e1a-48f4520ce1c2"),
                            CreatedAt = new DateTime(2022, 12, 16, 0, 37, 8, 17, DateTimeKind.Utc).AddTicks(8360)
                        },
                        new
                        {
                            Id = new Guid("ff667d01-b215-48cc-ba91-a9de3edae706"),
                            ClientId = new Guid("4c5e197e-32c0-4c14-bb02-0046c9c7f7dd"),
                            CreatedAt = new DateTime(2023, 4, 8, 0, 37, 8, 17, DateTimeKind.Utc).AddTicks(8362)
                        });
                });

            modelBuilder.Entity("OrderingService.Dal.Models.OrderProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductsInOrders", t =>
                        {
                            t.HasCheckConstraint("Price", "Price > 0");

                            t.HasCheckConstraint("Quantity", "Quantity >= 0");
                        });

                    b.HasData(
                        new
                        {
                            Id = new Guid("534bc064-1555-4c61-8ce6-93881a50bf1f"),
                            OrderId = new Guid("8e71748f-ce67-4997-bd33-5b035fefe618"),
                            Price = 1500m,
                            ProductId = new Guid("660f8c46-51f6-40a2-89c9-e51e7b2e1edd"),
                            Quantity = 2
                        },
                        new
                        {
                            Id = new Guid("d19f16d1-dfec-464c-a254-622691614a7a"),
                            OrderId = new Guid("20b8b451-fd6a-4e20-9860-0d4bc2f02b7c"),
                            Price = 200m,
                            ProductId = new Guid("b15ae1d0-935d-4d59-8091-b7508655cf72"),
                            Quantity = 4
                        },
                        new
                        {
                            Id = new Guid("248ea536-e9e9-4086-9dd5-4765dbc1e301"),
                            OrderId = new Guid("20b8b451-fd6a-4e20-9860-0d4bc2f02b7c"),
                            Price = 337652.50m,
                            ProductId = new Guid("03258a9d-94c5-4c15-8d2c-e08b808bd79c"),
                            Quantity = 5
                        },
                        new
                        {
                            Id = new Guid("c48da1cd-3032-4ddd-86e8-6a57993aec3a"),
                            OrderId = new Guid("373b7c83-1d9f-4386-a6f4-0f45aa290366"),
                            Price = 75995m,
                            ProductId = new Guid("b0d66c85-e0a5-450b-aef5-e7dacd23c70c"),
                            Quantity = 5
                        },
                        new
                        {
                            Id = new Guid("6df5faec-909f-4efc-9f38-7a6dfff5b0be"),
                            OrderId = new Guid("96fe52dc-3a9b-4401-ae8d-d66e4a6aa648"),
                            Price = 148499.97m,
                            ProductId = new Guid("bce208b7-1c21-41ee-9fac-bf72f8f7f457"),
                            Quantity = 3
                        },
                        new
                        {
                            Id = new Guid("3a105801-85bb-45a5-a94a-4d4d2a42b60e"),
                            OrderId = new Guid("96fe52dc-3a9b-4401-ae8d-d66e4a6aa648"),
                            Price = 51699m,
                            ProductId = new Guid("fce0b3e6-b473-4878-ab3b-2bf35e684fdb"),
                            Quantity = 1
                        },
                        new
                        {
                            Id = new Guid("0d9d69f7-3a6d-4c25-a859-af74ae913424"),
                            OrderId = new Guid("96fe52dc-3a9b-4401-ae8d-d66e4a6aa648"),
                            Price = 799.96m,
                            ProductId = new Guid("afe28108-822e-41d3-a2ef-358552c3d103"),
                            Quantity = 4
                        },
                        new
                        {
                            Id = new Guid("9bee1852-16a0-418e-b513-d0e586064119"),
                            OrderId = new Guid("0e37779d-9348-47e2-8836-9880b7e0b268"),
                            Price = 92799.6m,
                            ProductId = new Guid("9b8269af-e0ba-41a2-a382-da32138d88c7"),
                            Quantity = 4
                        },
                        new
                        {
                            Id = new Guid("23798b9f-4a2a-4ca2-907c-c31d6ee694fd"),
                            OrderId = new Guid("0e37779d-9348-47e2-8836-9880b7e0b268"),
                            Price = 46499.97m,
                            ProductId = new Guid("4adafc39-956a-4f58-a542-77be558e3417"),
                            Quantity = 3
                        },
                        new
                        {
                            Id = new Guid("8116ebcf-cabe-4447-b7c5-713580e4a4cd"),
                            OrderId = new Guid("0e37779d-9348-47e2-8836-9880b7e0b268"),
                            Price = 840m,
                            ProductId = new Guid("92e6a345-5014-4097-9f40-e34c82c1faa6"),
                            Quantity = 3
                        },
                        new
                        {
                            Id = new Guid("0b87b8cf-00c2-42fa-9a84-06c0ae02dfee"),
                            OrderId = new Guid("c3600c28-48e2-42fa-a266-166809391cca"),
                            Price = 599.97m,
                            ProductId = new Guid("1a603c2c-10ce-4712-bb0f-00332ec1cbbc"),
                            Quantity = 3
                        },
                        new
                        {
                            Id = new Guid("0975950a-f0e4-4c3b-95b6-c831bea945a9"),
                            OrderId = new Guid("c3600c28-48e2-42fa-a266-166809391cca"),
                            Price = 17596m,
                            ProductId = new Guid("23f72594-38b6-4656-9c7e-04eb36dc7697"),
                            Quantity = 4
                        },
                        new
                        {
                            Id = new Guid("09a157c9-07db-4685-b0b3-6628540e671d"),
                            OrderId = new Guid("a246cd3e-f8f3-491a-bb66-06e66bc3800c"),
                            Price = 15999.95m,
                            ProductId = new Guid("01cfc44b-b3be-487a-9057-26042ee65640"),
                            Quantity = 5
                        },
                        new
                        {
                            Id = new Guid("e2351fc9-c014-4142-b2e6-f4eec3f61846"),
                            OrderId = new Guid("b9a18339-1285-4260-a876-84db2086b728"),
                            Price = 799.96m,
                            ProductId = new Guid("afe28108-822e-41d3-a2ef-358552c3d103"),
                            Quantity = 4
                        },
                        new
                        {
                            Id = new Guid("91e357b2-3f18-4511-af66-0b6f2b048f78"),
                            OrderId = new Guid("b9a18339-1285-4260-a876-84db2086b728"),
                            Price = 799m,
                            ProductId = new Guid("3113a0b9-19a2-47e3-994d-8c65b90efbd6"),
                            Quantity = 1
                        },
                        new
                        {
                            Id = new Guid("0e27c32a-d808-4771-8f92-8e11892b4de7"),
                            OrderId = new Guid("872832ee-555d-4dfc-b1fa-e2c460eaf982"),
                            Price = 98999.98m,
                            ProductId = new Guid("bce208b7-1c21-41ee-9fac-bf72f8f7f457"),
                            Quantity = 2
                        },
                        new
                        {
                            Id = new Guid("abd3fb27-3df9-443e-bea9-7204d29c9817"),
                            OrderId = new Guid("872832ee-555d-4dfc-b1fa-e2c460eaf982"),
                            Price = 1598m,
                            ProductId = new Guid("3113a0b9-19a2-47e3-994d-8c65b90efbd6"),
                            Quantity = 2
                        },
                        new
                        {
                            Id = new Guid("f7d302f8-0e34-41f3-84cf-fd35870e5a13"),
                            OrderId = new Guid("5e77610c-2a87-481b-8435-7948b74e7a7c"),
                            Price = 1500m,
                            ProductId = new Guid("660f8c46-51f6-40a2-89c9-e51e7b2e1edd"),
                            Quantity = 2
                        },
                        new
                        {
                            Id = new Guid("7d215b61-07aa-4f19-ab12-87fe4e09b0b0"),
                            OrderId = new Guid("5e77610c-2a87-481b-8435-7948b74e7a7c"),
                            Price = 1699m,
                            ProductId = new Guid("0c66710e-356d-4fa5-9ef2-a73a5fd28109"),
                            Quantity = 1
                        },
                        new
                        {
                            Id = new Guid("44e82805-75d4-4bd1-9fdc-c0510726a140"),
                            OrderId = new Guid("94d3252b-647f-4e6f-b4a6-a91715d9e9e3"),
                            Price = 15199m,
                            ProductId = new Guid("b0d66c85-e0a5-450b-aef5-e7dacd23c70c"),
                            Quantity = 1
                        },
                        new
                        {
                            Id = new Guid("40df1931-73e0-4aed-bafe-8a8b0d27f0fe"),
                            OrderId = new Guid("94d3252b-647f-4e6f-b4a6-a91715d9e9e3"),
                            Price = 597m,
                            ProductId = new Guid("4b4ef205-4c20-45ea-af02-5915b75804c7"),
                            Quantity = 3
                        },
                        new
                        {
                            Id = new Guid("90129d34-8b18-494b-9c04-20e3b4f51fbf"),
                            OrderId = new Guid("7c0f0569-7584-42d0-9de2-d50a094ac1f8"),
                            Price = 599.97m,
                            ProductId = new Guid("1a603c2c-10ce-4712-bb0f-00332ec1cbbc"),
                            Quantity = 3
                        },
                        new
                        {
                            Id = new Guid("cdb1ae7d-5201-4480-8004-91bfba2060e7"),
                            OrderId = new Guid("7c0f0569-7584-42d0-9de2-d50a094ac1f8"),
                            Price = 3196m,
                            ProductId = new Guid("3113a0b9-19a2-47e3-994d-8c65b90efbd6"),
                            Quantity = 4
                        },
                        new
                        {
                            Id = new Guid("fff03144-851b-4478-a835-944ebccd2a48"),
                            OrderId = new Guid("42cb4203-0740-4c7a-bc34-80261c7b5af5"),
                            Price = 45597m,
                            ProductId = new Guid("b0d66c85-e0a5-450b-aef5-e7dacd23c70c"),
                            Quantity = 3
                        },
                        new
                        {
                            Id = new Guid("375673e8-c245-40ee-ae47-de349ab7d320"),
                            OrderId = new Guid("a6ed2555-adc4-4ad2-ac42-c4fa233decf1"),
                            Price = 92799.6m,
                            ProductId = new Guid("9b8269af-e0ba-41a2-a382-da32138d88c7"),
                            Quantity = 4
                        },
                        new
                        {
                            Id = new Guid("1f5dc4be-274c-463a-bfc3-f9dc28850fc3"),
                            OrderId = new Guid("d43ab11b-1d59-4ef8-b233-b9f1d2aab6e7"),
                            Price = 3033m,
                            ProductId = new Guid("502c13c1-b463-40a4-ba8a-53c61e7b498b"),
                            Quantity = 1
                        },
                        new
                        {
                            Id = new Guid("d76ddf31-0b6f-4182-8f85-504c04467842"),
                            OrderId = new Guid("d43ab11b-1d59-4ef8-b233-b9f1d2aab6e7"),
                            Price = 148499.97m,
                            ProductId = new Guid("bce208b7-1c21-41ee-9fac-bf72f8f7f457"),
                            Quantity = 3
                        },
                        new
                        {
                            Id = new Guid("f2395798-b0bf-4321-9cbe-2ef8a86f3e93"),
                            OrderId = new Guid("15d4f293-dd7e-4944-99c1-811699c8bd0e"),
                            Price = 258495m,
                            ProductId = new Guid("fce0b3e6-b473-4878-ab3b-2bf35e684fdb"),
                            Quantity = 5
                        },
                        new
                        {
                            Id = new Guid("5f94cb2f-ca9f-4357-bd1e-785fee1bb728"),
                            OrderId = new Guid("ff667d01-b215-48cc-ba91-a9de3edae706"),
                            Price = 15499.99m,
                            ProductId = new Guid("4adafc39-956a-4f58-a542-77be558e3417"),
                            Quantity = 1
                        },
                        new
                        {
                            Id = new Guid("a1736fbc-5c14-4bdb-a8ea-49b8accf14ed"),
                            OrderId = new Guid("ff667d01-b215-48cc-ba91-a9de3edae706"),
                            Price = 799.96m,
                            ProductId = new Guid("afe28108-822e-41d3-a2ef-358552c3d103"),
                            Quantity = 4
                        },
                        new
                        {
                            Id = new Guid("926d856d-e7a7-4302-a606-667091b324f2"),
                            OrderId = new Guid("ff667d01-b215-48cc-ba91-a9de3edae706"),
                            Price = 199.99m,
                            ProductId = new Guid("1a603c2c-10ce-4712-bb0f-00332ec1cbbc"),
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("OrderingService.Dal.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductTypeRefId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name");

                    b.HasIndex("ProductTypeRefId");

                    b.ToTable("Products", t =>
                        {
                            t.HasCheckConstraint("Price", "Price > 0")
                                .HasName("Price1");

                            t.HasCheckConstraint("Quantity", "Quantity >= 0")
                                .HasName("Quantity1");
                        });

                    b.HasData(
                        new
                        {
                            Id = new Guid("03258a9d-94c5-4c15-8d2c-e08b808bd79c"),
                            Name = "IPhone 8s",
                            Price = 67530.50m,
                            ProductTypeRefId = 0,
                            Quantity = 12
                        },
                        new
                        {
                            Id = new Guid("fce0b3e6-b473-4878-ab3b-2bf35e684fdb"),
                            Name = "ASUS VivoBook 16X M1603QA",
                            Price = 51699m,
                            ProductTypeRefId = 0,
                            Quantity = 11
                        },
                        new
                        {
                            Id = new Guid("b0d66c85-e0a5-450b-aef5-e7dacd23c70c"),
                            Name = "LED Harper 43F660Y",
                            Price = 15199m,
                            ProductTypeRefId = 0,
                            Quantity = 6
                        },
                        new
                        {
                            Id = new Guid("9b8269af-e0ba-41a2-a382-da32138d88c7"),
                            Name = "LET Prestigio PTV50SS08X",
                            Price = 23199.9m,
                            ProductTypeRefId = 0,
                            Quantity = 7
                        },
                        new
                        {
                            Id = new Guid("4adafc39-956a-4f58-a542-77be558e3417"),
                            Name = "AMD Ryzen 7 4700G OEM",
                            Price = 15499.99m,
                            ProductTypeRefId = 0,
                            Quantity = 20
                        },
                        new
                        {
                            Id = new Guid("afe28108-822e-41d3-a2ef-358552c3d103"),
                            Name = "Швабра Master House Бачата",
                            Price = 199.99m,
                            ProductTypeRefId = 3,
                            Quantity = 33
                        },
                        new
                        {
                            Id = new Guid("70073151-e3dc-4c57-8e92-1c2cb39cad6d"),
                            Name = "Швабра Master House Джайв",
                            Price = 199.99m,
                            ProductTypeRefId = 3,
                            Quantity = 21
                        },
                        new
                        {
                            Id = new Guid("b15ae1d0-935d-4d59-8091-b7508655cf72"),
                            Name = "Чистящее средство для нагревательных элементов электроплит/газовых плит Topper IR 5",
                            Price = 50m,
                            ProductTypeRefId = 3,
                            Quantity = 0
                        },
                        new
                        {
                            Id = new Guid("4b4ef205-4c20-45ea-af02-5915b75804c7"),
                            Name = "Набор для ухода для стеклокерамических поверхностей Fiora bio ЭКО 20-002",
                            Price = 199m,
                            ProductTypeRefId = 3,
                            Quantity = 5
                        },
                        new
                        {
                            Id = new Guid("92e6a345-5014-4097-9f40-e34c82c1faa6"),
                            Name = "Очиститель для тканей и мебели ОС-Гель",
                            Price = 280m,
                            ProductTypeRefId = 3,
                            Quantity = 15
                        },
                        new
                        {
                            Id = new Guid("bce208b7-1c21-41ee-9fac-bf72f8f7f457"),
                            Name = "Газонокосилка-робот Champion RMB1828",
                            Price = 49499.99m,
                            ProductTypeRefId = 3,
                            Quantity = 8
                        },
                        new
                        {
                            Id = new Guid("1a603c2c-10ce-4712-bb0f-00332ec1cbbc"),
                            Name = "ТВ розетка одинарная Schneider Electric Glossa GSL000391",
                            Price = 199.99m,
                            ProductTypeRefId = 3,
                            Quantity = 20
                        },
                        new
                        {
                            Id = new Guid("5f0c6a25-90b9-453f-89f3-1a56f8c0c25f"),
                            Name = "Набор инструментов Квалитет 5027038",
                            Price = 5699.9m,
                            ProductTypeRefId = 2,
                            Quantity = 9
                        },
                        new
                        {
                            Id = new Guid("1a13e6ca-08f0-492e-a0f6-9b2aca1d58e5"),
                            Name = "Набор инструментов Swiss Tools ST-1077",
                            Price = 5799.99m,
                            ProductTypeRefId = 2,
                            Quantity = 20
                        },
                        new
                        {
                            Id = new Guid("502c13c1-b463-40a4-ba8a-53c61e7b498b"),
                            Name = "Набор инструментов Дело Техники 600937",
                            Price = 3033m,
                            ProductTypeRefId = 2,
                            Quantity = 30
                        },
                        new
                        {
                            Id = new Guid("e8ee073f-d08c-4e8d-a7b8-b12aece7a046"),
                            Name = "Инструмент для вскрытия техники Rexant 12-4335",
                            Price = 99.99m,
                            ProductTypeRefId = 2,
                            Quantity = 20
                        },
                        new
                        {
                            Id = new Guid("d4931e86-e4f4-4336-a892-5a215cb7708b"),
                            Name = "Отвертка с набором насадок Matrix 11598",
                            Price = 110m,
                            ProductTypeRefId = 2,
                            Quantity = 25
                        },
                        new
                        {
                            Id = new Guid("0c66710e-356d-4fa5-9ef2-a73a5fd28109"),
                            Name = "Набор инструментов КВТ Профи НИИ-09",
                            Price = 1699m,
                            ProductTypeRefId = 2,
                            Quantity = 10
                        },
                        new
                        {
                            Id = new Guid("23f72594-38b6-4656-9c7e-04eb36dc7697"),
                            Name = "Паяльная станция Rexant 12-0714",
                            Price = 4399m,
                            ProductTypeRefId = 2,
                            Quantity = 2
                        },
                        new
                        {
                            Id = new Guid("01cfc44b-b3be-487a-9057-26042ee65640"),
                            Name = "Видеорегистратор 70mai Dash Cam M300",
                            Price = 3199.99m,
                            ProductTypeRefId = 1,
                            Quantity = 5
                        },
                        new
                        {
                            Id = new Guid("e45f8511-7716-41fa-993d-2ebbd8dd50eb"),
                            Name = "Адаптер для скрытого подключения видеорегистратора Roadgid Cord DC",
                            Price = 1199m,
                            ProductTypeRefId = 1,
                            Quantity = 10
                        },
                        new
                        {
                            Id = new Guid("3113a0b9-19a2-47e3-994d-8c65b90efbd6"),
                            Name = "Камера заднего вида Silverstone F1 Interpower IP-662 LED",
                            Price = 799m,
                            ProductTypeRefId = 1,
                            Quantity = 6
                        },
                        new
                        {
                            Id = new Guid("660f8c46-51f6-40a2-89c9-e51e7b2e1edd"),
                            Name = "Инвертор DEXP CAR 150W",
                            Price = 750m,
                            ProductTypeRefId = 1,
                            Quantity = 0
                        });
                });

            modelBuilder.Entity("OrderingService.Dal.Models.ProductTypeRef", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name");

                    b.ToTable("ProductTypes");

                    b.HasData(
                        new
                        {
                            Id = 0,
                            Description = "Электроника",
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = 1,
                            Description = "Автомобильные товары",
                            Name = "Cars"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Стройматериалы и инструменты",
                            Name = "BuildingMaterialsInstruments"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Всё для дома",
                            Name = "HouseHoldGoods"
                        });
                });

            modelBuilder.Entity("OrderingService.Dal.Models.Order", b =>
                {
                    b.HasOne("OrderingService.Dal.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("OrderingService.Dal.Models.OrderProduct", b =>
                {
                    b.HasOne("OrderingService.Dal.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OrderingService.Dal.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("OrderingService.Dal.Models.Product", b =>
                {
                    b.HasOne("OrderingService.Dal.Models.ProductTypeRef", "ProductTypeRef")
                        .WithMany()
                        .HasForeignKey("ProductTypeRefId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ProductTypeRef");
                });
#pragma warning restore 612, 618
        }
    }
}
