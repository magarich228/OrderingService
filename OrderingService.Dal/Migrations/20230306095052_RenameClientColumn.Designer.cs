// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrderingService.Dal;

#nullable disable

namespace OrderingService.Dal.Migrations
{
    [DbContext(typeof(OrderingContext))]
    [Migration("20230306095052_RenameClientColumn")]
    partial class RenameClientColumn
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.1.23111.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OrderingService.Dal.Models.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasAlternateKey("Phone");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = new Guid("34eacd12-4d0b-4442-a763-eda447b4ebb2"),
                            FullName = "Меркушев Бенедикт Алексеевич",
                            Phone = "89996225028"
                        },
                        new
                        {
                            Id = new Guid("807a2345-2063-4125-a91f-d843ca45e5c3"),
                            FullName = "Ефимов Аким Лаврентьевич",
                            Phone = "89506225027"
                        },
                        new
                        {
                            Id = new Guid("6ca29f4a-970c-474d-a9ff-4714beb7be62"),
                            FullName = "Савин Август Оскарович",
                            Phone = "89506225026"
                        },
                        new
                        {
                            Id = new Guid("1680c207-3d83-41af-a3e9-2294c69d503f"),
                            FullName = "Воронцов Любомир Антонович",
                            Phone = "89906225025"
                        },
                        new
                        {
                            Id = new Guid("5bb12261-d704-4afe-85bf-a41e83f074ac"),
                            FullName = "Ларионов Аввакуум Христофорович",
                            Phone = "89506335028"
                        },
                        new
                        {
                            Id = new Guid("79c604bd-57d4-497a-8993-20df12e2e58e"),
                            FullName = "Беляков Демьян Степанович",
                            Phone = "89606225028"
                        },
                        new
                        {
                            Id = new Guid("30c71f76-c0aa-4282-bfd9-819098097bcc"),
                            FullName = "Баранова Марьяна Рудольфовна",
                            Phone = "89506224428"
                        },
                        new
                        {
                            Id = new Guid("65955faa-1533-4eef-b18a-07a359fa3b16"),
                            FullName = "Зайцева Римма Аристарховна",
                            Phone = "89503335028"
                        },
                        new
                        {
                            Id = new Guid("03e318e4-ec62-44d9-9b03-bb9d82f095bf"),
                            FullName = "Лазарева Лигия Пётровна",
                            Phone = "89506225268"
                        },
                        new
                        {
                            Id = new Guid("fccf7ff0-d1f4-4007-a8e0-32bd3d88558e"),
                            FullName = "Фёдорова Асида Федоровна",
                            Phone = "89506225278"
                        },
                        new
                        {
                            Id = new Guid("9bdf143e-8f1c-485e-a83a-2c94fa2708a5"),
                            FullName = "Дорофеева Георгина Онисимовна",
                            Phone = "89506330270"
                        });
                });

            modelBuilder.Entity("OrderingService.Dal.Models.ClientCredentials", b =>
                {
                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Login")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ClientId", "Login");

                    b.ToTable("ClientCredentials");

                    b.HasData(
                        new
                        {
                            ClientId = new Guid("34eacd12-4d0b-4442-a763-eda447b4ebb2"),
                            Login = "user34eacd12-4d0b-4442-a763-eda447b4ebb2",
                            Password = "qwe12345"
                        },
                        new
                        {
                            ClientId = new Guid("807a2345-2063-4125-a91f-d843ca45e5c3"),
                            Login = "user807a2345-2063-4125-a91f-d843ca45e5c3",
                            Password = "qwe12345"
                        },
                        new
                        {
                            ClientId = new Guid("6ca29f4a-970c-474d-a9ff-4714beb7be62"),
                            Login = "user6ca29f4a-970c-474d-a9ff-4714beb7be62",
                            Password = "qwe12345"
                        },
                        new
                        {
                            ClientId = new Guid("1680c207-3d83-41af-a3e9-2294c69d503f"),
                            Login = "user1680c207-3d83-41af-a3e9-2294c69d503f",
                            Password = "qwe12345"
                        },
                        new
                        {
                            ClientId = new Guid("5bb12261-d704-4afe-85bf-a41e83f074ac"),
                            Login = "user5bb12261-d704-4afe-85bf-a41e83f074ac",
                            Password = "qwe12345"
                        },
                        new
                        {
                            ClientId = new Guid("79c604bd-57d4-497a-8993-20df12e2e58e"),
                            Login = "user79c604bd-57d4-497a-8993-20df12e2e58e",
                            Password = "qwe12345"
                        },
                        new
                        {
                            ClientId = new Guid("30c71f76-c0aa-4282-bfd9-819098097bcc"),
                            Login = "user30c71f76-c0aa-4282-bfd9-819098097bcc",
                            Password = "qwe12345"
                        },
                        new
                        {
                            ClientId = new Guid("65955faa-1533-4eef-b18a-07a359fa3b16"),
                            Login = "user65955faa-1533-4eef-b18a-07a359fa3b16",
                            Password = "qwe12345"
                        },
                        new
                        {
                            ClientId = new Guid("03e318e4-ec62-44d9-9b03-bb9d82f095bf"),
                            Login = "user03e318e4-ec62-44d9-9b03-bb9d82f095bf",
                            Password = "qwe12345"
                        },
                        new
                        {
                            ClientId = new Guid("fccf7ff0-d1f4-4007-a8e0-32bd3d88558e"),
                            Login = "userfccf7ff0-d1f4-4007-a8e0-32bd3d88558e",
                            Password = "qwe12345"
                        },
                        new
                        {
                            ClientId = new Guid("9bdf143e-8f1c-485e-a83a-2c94fa2708a5"),
                            Login = "user9bdf143e-8f1c-485e-a83a-2c94fa2708a5",
                            Password = "qwe12345"
                        });
                });

            modelBuilder.Entity("OrderingService.Dal.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 3, 6, 9, 50, 52, 2, DateTimeKind.Utc).AddTicks(7564));

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7890ee03-4bdf-4fed-bfa3-e2004806d49c"),
                            ClientId = new Guid("03e318e4-ec62-44d9-9b03-bb9d82f095bf"),
                            CreatedAt = new DateTime(2022, 3, 22, 9, 50, 51, 300, DateTimeKind.Utc).AddTicks(1910)
                        },
                        new
                        {
                            Id = new Guid("6f4786ba-e55f-4c28-9607-db156647e0d2"),
                            ClientId = new Guid("34eacd12-4d0b-4442-a763-eda447b4ebb2"),
                            CreatedAt = new DateTime(2022, 3, 2, 9, 50, 51, 300, DateTimeKind.Utc).AddTicks(3222)
                        },
                        new
                        {
                            Id = new Guid("7de29a52-071a-453a-bd81-13ca85bd85d0"),
                            ClientId = new Guid("30c71f76-c0aa-4282-bfd9-819098097bcc"),
                            CreatedAt = new DateTime(2022, 3, 6, 9, 50, 51, 300, DateTimeKind.Utc).AddTicks(3232)
                        },
                        new
                        {
                            Id = new Guid("245673a2-ae8a-452e-a770-f6a6dafa845e"),
                            ClientId = new Guid("fccf7ff0-d1f4-4007-a8e0-32bd3d88558e"),
                            CreatedAt = new DateTime(2023, 9, 13, 9, 50, 51, 300, DateTimeKind.Utc).AddTicks(3234)
                        },
                        new
                        {
                            Id = new Guid("263eeaaf-8f04-40c2-9eda-72b55e6dfa3a"),
                            ClientId = new Guid("fccf7ff0-d1f4-4007-a8e0-32bd3d88558e"),
                            CreatedAt = new DateTime(2022, 8, 16, 9, 50, 51, 300, DateTimeKind.Utc).AddTicks(3236)
                        },
                        new
                        {
                            Id = new Guid("ad3e58d8-eadd-4a11-a246-53ac42b4822c"),
                            ClientId = new Guid("65955faa-1533-4eef-b18a-07a359fa3b16"),
                            CreatedAt = new DateTime(2022, 8, 13, 9, 50, 51, 300, DateTimeKind.Utc).AddTicks(3241)
                        },
                        new
                        {
                            Id = new Guid("4b921a3e-1872-48cb-a808-654dce38e754"),
                            ClientId = new Guid("65955faa-1533-4eef-b18a-07a359fa3b16"),
                            CreatedAt = new DateTime(2022, 10, 29, 9, 50, 51, 300, DateTimeKind.Utc).AddTicks(3242)
                        },
                        new
                        {
                            Id = new Guid("85f6ecc3-7ec8-4dd0-ac87-18623f941e71"),
                            ClientId = new Guid("9bdf143e-8f1c-485e-a83a-2c94fa2708a5"),
                            CreatedAt = new DateTime(2023, 12, 17, 9, 50, 51, 300, DateTimeKind.Utc).AddTicks(3244)
                        },
                        new
                        {
                            Id = new Guid("fda036d6-04da-44dc-bbfc-a765266d5374"),
                            ClientId = new Guid("03e318e4-ec62-44d9-9b03-bb9d82f095bf"),
                            CreatedAt = new DateTime(2024, 3, 20, 9, 50, 51, 300, DateTimeKind.Utc).AddTicks(3246)
                        },
                        new
                        {
                            Id = new Guid("cc886bde-58bd-4ad7-b003-d22f17de11ff"),
                            ClientId = new Guid("6ca29f4a-970c-474d-a9ff-4714beb7be62"),
                            CreatedAt = new DateTime(2022, 4, 6, 9, 50, 51, 300, DateTimeKind.Utc).AddTicks(3251)
                        },
                        new
                        {
                            Id = new Guid("463b5139-832e-4d72-b766-b03a654e85d1"),
                            ClientId = new Guid("79c604bd-57d4-497a-8993-20df12e2e58e"),
                            CreatedAt = new DateTime(2024, 1, 25, 9, 50, 51, 300, DateTimeKind.Utc).AddTicks(3253)
                        },
                        new
                        {
                            Id = new Guid("6938ec58-b74b-4601-9850-bd5ca5ade238"),
                            ClientId = new Guid("34eacd12-4d0b-4442-a763-eda447b4ebb2"),
                            CreatedAt = new DateTime(2022, 2, 17, 9, 50, 51, 300, DateTimeKind.Utc).AddTicks(3254)
                        },
                        new
                        {
                            Id = new Guid("59449844-13bb-46f4-be5a-8d22a87e4428"),
                            ClientId = new Guid("1680c207-3d83-41af-a3e9-2294c69d503f"),
                            CreatedAt = new DateTime(2023, 12, 30, 9, 50, 51, 300, DateTimeKind.Utc).AddTicks(3256)
                        },
                        new
                        {
                            Id = new Guid("543785f4-9b5b-47b3-8940-839635f4357d"),
                            ClientId = new Guid("fccf7ff0-d1f4-4007-a8e0-32bd3d88558e"),
                            CreatedAt = new DateTime(2023, 12, 14, 9, 50, 51, 300, DateTimeKind.Utc).AddTicks(3258)
                        },
                        new
                        {
                            Id = new Guid("6e0ace1b-3bb6-45a6-9db5-987edb5eaf28"),
                            ClientId = new Guid("03e318e4-ec62-44d9-9b03-bb9d82f095bf"),
                            CreatedAt = new DateTime(2022, 7, 16, 9, 50, 51, 300, DateTimeKind.Utc).AddTicks(3259)
                        },
                        new
                        {
                            Id = new Guid("1b323bf9-37a5-4e54-870e-3a02da72cc8f"),
                            ClientId = new Guid("30c71f76-c0aa-4282-bfd9-819098097bcc"),
                            CreatedAt = new DateTime(2023, 6, 23, 9, 50, 51, 300, DateTimeKind.Utc).AddTicks(3261)
                        },
                        new
                        {
                            Id = new Guid("9af63c03-35a8-47fe-a76b-8472a5b338cb"),
                            ClientId = new Guid("34eacd12-4d0b-4442-a763-eda447b4ebb2"),
                            CreatedAt = new DateTime(2022, 10, 30, 9, 50, 51, 300, DateTimeKind.Utc).AddTicks(3262)
                        },
                        new
                        {
                            Id = new Guid("27c00a03-9173-43af-aca3-ff0a4475762c"),
                            ClientId = new Guid("6ca29f4a-970c-474d-a9ff-4714beb7be62"),
                            CreatedAt = new DateTime(2022, 12, 5, 9, 50, 51, 300, DateTimeKind.Utc).AddTicks(3266)
                        },
                        new
                        {
                            Id = new Guid("94dbe9f6-2f58-4504-a550-1174f8a03ec8"),
                            ClientId = new Guid("807a2345-2063-4125-a91f-d843ca45e5c3"),
                            CreatedAt = new DateTime(2022, 9, 8, 9, 50, 51, 300, DateTimeKind.Utc).AddTicks(3268)
                        },
                        new
                        {
                            Id = new Guid("b8c7ecd6-8e19-42d3-aaaf-c018011e6009"),
                            ClientId = new Guid("fccf7ff0-d1f4-4007-a8e0-32bd3d88558e"),
                            CreatedAt = new DateTime(2022, 12, 31, 9, 50, 51, 300, DateTimeKind.Utc).AddTicks(3269)
                        },
                        new
                        {
                            Id = new Guid("e775880f-bc3a-4ec4-8601-7813411f695e"),
                            ClientId = new Guid("34eacd12-4d0b-4442-a763-eda447b4ebb2"),
                            CreatedAt = new DateTime(2024, 1, 5, 9, 50, 51, 300, DateTimeKind.Utc).AddTicks(3271)
                        },
                        new
                        {
                            Id = new Guid("a893c487-c401-4c3c-b482-bd4eaf81cfa1"),
                            ClientId = new Guid("34eacd12-4d0b-4442-a763-eda447b4ebb2"),
                            CreatedAt = new DateTime(2023, 1, 23, 9, 50, 51, 300, DateTimeKind.Utc).AddTicks(3272)
                        });
                });

            modelBuilder.Entity("OrderingService.Dal.Models.OrderProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductsInOrders", t =>
                        {
                            t.HasCheckConstraint("Price", "Price > 0");

                            t.HasCheckConstraint("Quantity", "Quantity >= 0");
                        });

                    b.HasData(
                        new
                        {
                            Id = new Guid("6bef5347-81b9-41e2-997e-617dfcb2bb0f"),
                            OrderId = new Guid("6f4786ba-e55f-4c28-9607-db156647e0d2"),
                            Price = 6399.98m,
                            ProductId = new Guid("27134bfe-a2af-4c3f-a838-896f98d0ba76"),
                            Quantity = 2
                        },
                        new
                        {
                            Id = new Guid("9fecf21a-8fb0-4d38-9f22-76b730ae71a0"),
                            OrderId = new Guid("7de29a52-071a-453a-bd81-13ca85bd85d0"),
                            Price = 135061.00m,
                            ProductId = new Guid("93cd02e8-12d0-4d9e-95e2-89db8589dfed"),
                            Quantity = 2
                        },
                        new
                        {
                            Id = new Guid("6c80ab02-0de4-495c-9692-9f0af3e84529"),
                            OrderId = new Guid("7de29a52-071a-453a-bd81-13ca85bd85d0"),
                            Price = 2398m,
                            ProductId = new Guid("2f186d0f-8524-47d6-a8d3-ab9036c55d03"),
                            Quantity = 2
                        },
                        new
                        {
                            Id = new Guid("77a9287c-f36a-4420-a04c-23ae25745820"),
                            OrderId = new Guid("7de29a52-071a-453a-bd81-13ca85bd85d0"),
                            Price = 8495m,
                            ProductId = new Guid("0c04497a-8537-4d21-a325-48d013ef9707"),
                            Quantity = 5
                        },
                        new
                        {
                            Id = new Guid("2755e0fa-ed9a-4172-8877-052cae6cab90"),
                            OrderId = new Guid("245673a2-ae8a-452e-a770-f6a6dafa845e"),
                            Price = 50m,
                            ProductId = new Guid("7dc25886-363c-43ff-b3ac-e6a54d461c23"),
                            Quantity = 1
                        },
                        new
                        {
                            Id = new Guid("a062e77b-906f-45df-8f33-98916f1ef561"),
                            OrderId = new Guid("245673a2-ae8a-452e-a770-f6a6dafa845e"),
                            Price = 398m,
                            ProductId = new Guid("800ffca3-414c-4bb1-bfab-e33f3c8678f8"),
                            Quantity = 2
                        },
                        new
                        {
                            Id = new Guid("2de95e4f-0fa6-4065-9f34-bb67c89e681e"),
                            OrderId = new Guid("245673a2-ae8a-452e-a770-f6a6dafa845e"),
                            Price = 6399.98m,
                            ProductId = new Guid("27134bfe-a2af-4c3f-a838-896f98d0ba76"),
                            Quantity = 2
                        },
                        new
                        {
                            Id = new Guid("e64ea973-09b9-4543-9ac6-92ddfd35bf06"),
                            OrderId = new Guid("ad3e58d8-eadd-4a11-a246-53ac42b4822c"),
                            Price = 61999.96m,
                            ProductId = new Guid("63cf6371-9d33-4665-9ef8-9f69b8fceec6"),
                            Quantity = 4
                        },
                        new
                        {
                            Id = new Guid("247b527f-53b9-4f18-9e53-e7a02cbfbcba"),
                            OrderId = new Guid("4b921a3e-1872-48cb-a808-654dce38e754"),
                            Price = 280m,
                            ProductId = new Guid("719cc4d6-3208-4525-b259-0839ff16c7ac"),
                            Quantity = 1
                        },
                        new
                        {
                            Id = new Guid("2fac7c0a-812a-448b-9cf0-24a383d44e7c"),
                            OrderId = new Guid("4b921a3e-1872-48cb-a808-654dce38e754"),
                            Price = 199.98m,
                            ProductId = new Guid("1effa22a-05e2-43af-8db7-9225e83903be"),
                            Quantity = 2
                        },
                        new
                        {
                            Id = new Guid("be24672d-38a1-41f7-8ef0-91da0cdeb1ba"),
                            OrderId = new Guid("85f6ecc3-7ec8-4dd0-ac87-18623f941e71"),
                            Price = 399.98m,
                            ProductId = new Guid("1300f356-0537-4f24-b0d9-3f84c655a4d3"),
                            Quantity = 2
                        },
                        new
                        {
                            Id = new Guid("a94d931e-a62f-402b-89c8-8735f9dfc6e6"),
                            OrderId = new Guid("85f6ecc3-7ec8-4dd0-ac87-18623f941e71"),
                            Price = 202591.50m,
                            ProductId = new Guid("93cd02e8-12d0-4d9e-95e2-89db8589dfed"),
                            Quantity = 3
                        },
                        new
                        {
                            Id = new Guid("c6311e82-5b3b-448d-bd5a-c0aaabcdf372"),
                            OrderId = new Guid("fda036d6-04da-44dc-bbfc-a765266d5374"),
                            Price = 75995m,
                            ProductId = new Guid("b824cfa1-1933-49ff-a7f1-3604f8ef31c0"),
                            Quantity = 5
                        },
                        new
                        {
                            Id = new Guid("76febb48-6c6e-45ef-8ddd-efb8036db1a8"),
                            OrderId = new Guid("cc886bde-58bd-4ad7-b003-d22f17de11ff"),
                            Price = 799m,
                            ProductId = new Guid("3beb3098-b45f-467f-89d4-8673c21da150"),
                            Quantity = 1
                        },
                        new
                        {
                            Id = new Guid("934febdc-d391-429c-abd6-1bb1e870b43e"),
                            OrderId = new Guid("cc886bde-58bd-4ad7-b003-d22f17de11ff"),
                            Price = 4399m,
                            ProductId = new Guid("bba40a48-aab4-4a47-a6af-82068a1ad39b"),
                            Quantity = 1
                        },
                        new
                        {
                            Id = new Guid("4a56d999-e835-44e0-8e2c-82df5d2275e8"),
                            OrderId = new Guid("463b5139-832e-4d72-b766-b03a654e85d1"),
                            Price = 8798m,
                            ProductId = new Guid("bba40a48-aab4-4a47-a6af-82068a1ad39b"),
                            Quantity = 2
                        },
                        new
                        {
                            Id = new Guid("48748044-66dd-483b-8919-9d88e98382d5"),
                            OrderId = new Guid("6938ec58-b74b-4601-9850-bd5ca5ade238"),
                            Price = 1500m,
                            ProductId = new Guid("994f1902-0047-4086-bba3-0c1d9f1008dd"),
                            Quantity = 2
                        },
                        new
                        {
                            Id = new Guid("2a82ba8c-c01d-4ade-be44-a2d0f087d3a7"),
                            OrderId = new Guid("59449844-13bb-46f4-be5a-8d22a87e4428"),
                            Price = 3995m,
                            ProductId = new Guid("3beb3098-b45f-467f-89d4-8673c21da150"),
                            Quantity = 5
                        },
                        new
                        {
                            Id = new Guid("e3f5e6e5-4f86-40bf-977a-5455cf079ecd"),
                            OrderId = new Guid("1b323bf9-37a5-4e54-870e-3a02da72cc8f"),
                            Price = 499.95m,
                            ProductId = new Guid("1effa22a-05e2-43af-8db7-9225e83903be"),
                            Quantity = 5
                        },
                        new
                        {
                            Id = new Guid("0bea54c1-03c3-4ba2-be56-18f4f934cb2b"),
                            OrderId = new Guid("27c00a03-9173-43af-aca3-ff0a4475762c"),
                            Price = 8495m,
                            ProductId = new Guid("0c04497a-8537-4d21-a325-48d013ef9707"),
                            Quantity = 5
                        },
                        new
                        {
                            Id = new Guid("620aeba9-fac0-4213-9d78-9130a520ca35"),
                            OrderId = new Guid("27c00a03-9173-43af-aca3-ff0a4475762c"),
                            Price = 1120m,
                            ProductId = new Guid("719cc4d6-3208-4525-b259-0839ff16c7ac"),
                            Quantity = 4
                        },
                        new
                        {
                            Id = new Guid("29cdb5c0-6b20-4a9c-8482-6026fa0940cf"),
                            OrderId = new Guid("94dbe9f6-2f58-4504-a550-1174f8a03ec8"),
                            Price = 11599.98m,
                            ProductId = new Guid("fff57134-e573-488b-bd1c-275ce6a3033a"),
                            Quantity = 2
                        },
                        new
                        {
                            Id = new Guid("4d9acfb3-9942-4ceb-82da-cd6343c4d4d5"),
                            OrderId = new Guid("94dbe9f6-2f58-4504-a550-1174f8a03ec8"),
                            Price = 11599.98m,
                            ProductId = new Guid("fff57134-e573-488b-bd1c-275ce6a3033a"),
                            Quantity = 2
                        },
                        new
                        {
                            Id = new Guid("bd83f3d3-c167-43d2-b088-2f3031047d92"),
                            OrderId = new Guid("94dbe9f6-2f58-4504-a550-1174f8a03ec8"),
                            Price = 103398m,
                            ProductId = new Guid("24447a08-e8fe-4dad-b3d3-78e4e5ba88d5"),
                            Quantity = 2
                        },
                        new
                        {
                            Id = new Guid("b90cfe7d-f7a7-4547-930c-3fbe74ff53f2"),
                            OrderId = new Guid("b8c7ecd6-8e19-42d3-aaaf-c018011e6009"),
                            Price = 9599.97m,
                            ProductId = new Guid("27134bfe-a2af-4c3f-a838-896f98d0ba76"),
                            Quantity = 3
                        },
                        new
                        {
                            Id = new Guid("a23e6e43-d0b2-4c58-b901-ff3f7df552a0"),
                            OrderId = new Guid("b8c7ecd6-8e19-42d3-aaaf-c018011e6009"),
                            Price = 4796m,
                            ProductId = new Guid("2f186d0f-8524-47d6-a8d3-ab9036c55d03"),
                            Quantity = 4
                        },
                        new
                        {
                            Id = new Guid("fa5422ca-0682-4b5d-9161-9e346ef96886"),
                            OrderId = new Guid("e775880f-bc3a-4ec4-8601-7813411f695e"),
                            Price = 199.98m,
                            ProductId = new Guid("1effa22a-05e2-43af-8db7-9225e83903be"),
                            Quantity = 2
                        },
                        new
                        {
                            Id = new Guid("bff72ec6-5bdc-4ca5-b56c-5adb83de21fd"),
                            OrderId = new Guid("e775880f-bc3a-4ec4-8601-7813411f695e"),
                            Price = 12132m,
                            ProductId = new Guid("824c826c-980c-48be-bedd-3d1aa5fc2a29"),
                            Quantity = 4
                        },
                        new
                        {
                            Id = new Guid("cac67cd4-69e7-4856-9797-3878e7fae113"),
                            OrderId = new Guid("a893c487-c401-4c3c-b482-bd4eaf81cfa1"),
                            Price = 4399m,
                            ProductId = new Guid("bba40a48-aab4-4a47-a6af-82068a1ad39b"),
                            Quantity = 1
                        },
                        new
                        {
                            Id = new Guid("126e4bf9-f4e5-4b98-8519-2eb099c6d1ad"),
                            OrderId = new Guid("a893c487-c401-4c3c-b482-bd4eaf81cfa1"),
                            Price = 4796m,
                            ProductId = new Guid("2f186d0f-8524-47d6-a8d3-ab9036c55d03"),
                            Quantity = 4
                        },
                        new
                        {
                            Id = new Guid("24156cce-0591-4a02-bffd-54e9dd403c00"),
                            OrderId = new Guid("a893c487-c401-4c3c-b482-bd4eaf81cfa1"),
                            Price = 69599.7m,
                            ProductId = new Guid("505ec744-ad33-4b6b-a8f3-22c1db4a94c2"),
                            Quantity = 3
                        });
                });

            modelBuilder.Entity("OrderingService.Dal.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductTypeRefId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name");

                    b.HasIndex("ProductTypeRefId");

                    b.ToTable("Products", t =>
                        {
                            t.HasCheckConstraint("Price", "Price > 0")
                                .HasName("Price1");

                            t.HasCheckConstraint("Quantity", "Quantity >= 0")
                                .HasName("Quantity1");
                        });

                    b.HasData(
                        new
                        {
                            Id = new Guid("93cd02e8-12d0-4d9e-95e2-89db8589dfed"),
                            Name = "IPhone 8s",
                            Price = 67530.50m,
                            ProductTypeRefId = 0,
                            Quantity = 12
                        },
                        new
                        {
                            Id = new Guid("24447a08-e8fe-4dad-b3d3-78e4e5ba88d5"),
                            Name = "ASUS VivoBook 16X M1603QA",
                            Price = 51699m,
                            ProductTypeRefId = 0,
                            Quantity = 11
                        },
                        new
                        {
                            Id = new Guid("b824cfa1-1933-49ff-a7f1-3604f8ef31c0"),
                            Name = "LED Harper 43F660Y",
                            Price = 15199m,
                            ProductTypeRefId = 0,
                            Quantity = 6
                        },
                        new
                        {
                            Id = new Guid("505ec744-ad33-4b6b-a8f3-22c1db4a94c2"),
                            Name = "LET Prestigio PTV50SS08X",
                            Price = 23199.9m,
                            ProductTypeRefId = 0,
                            Quantity = 7
                        },
                        new
                        {
                            Id = new Guid("63cf6371-9d33-4665-9ef8-9f69b8fceec6"),
                            Name = "AMD Ryzen 7 4700G OEM",
                            Price = 15499.99m,
                            ProductTypeRefId = 0,
                            Quantity = 20
                        },
                        new
                        {
                            Id = new Guid("7d9df395-5669-459d-9d0b-2a9ec2972671"),
                            Name = "Швабра Master House Бачата",
                            Price = 199.99m,
                            ProductTypeRefId = 3,
                            Quantity = 33
                        },
                        new
                        {
                            Id = new Guid("1300f356-0537-4f24-b0d9-3f84c655a4d3"),
                            Name = "Швабра Master House Джайв",
                            Price = 199.99m,
                            ProductTypeRefId = 3,
                            Quantity = 21
                        },
                        new
                        {
                            Id = new Guid("7dc25886-363c-43ff-b3ac-e6a54d461c23"),
                            Name = "Чистящее средство для нагревательных элементов электроплит/газовых плит Topper IR 5",
                            Price = 50m,
                            ProductTypeRefId = 3,
                            Quantity = 0
                        },
                        new
                        {
                            Id = new Guid("800ffca3-414c-4bb1-bfab-e33f3c8678f8"),
                            Name = "Набор для ухода для стеклокерамических поверхностей Fiora bio ЭКО 20-002",
                            Price = 199m,
                            ProductTypeRefId = 3,
                            Quantity = 5
                        },
                        new
                        {
                            Id = new Guid("719cc4d6-3208-4525-b259-0839ff16c7ac"),
                            Name = "Очиститель для тканей и мебели ОС-Гель",
                            Price = 280m,
                            ProductTypeRefId = 3,
                            Quantity = 15
                        },
                        new
                        {
                            Id = new Guid("7f868a2a-03f3-4e2a-91fc-2ec82e737a84"),
                            Name = "Газонокосилка-робот Champion RMB1828",
                            Price = 49499.99m,
                            ProductTypeRefId = 3,
                            Quantity = 8
                        },
                        new
                        {
                            Id = new Guid("deea5cbd-7ac6-45f3-9724-cc95c5b234ba"),
                            Name = "ТВ розетка одинарная Schneider Electric Glossa GSL000391",
                            Price = 199.99m,
                            ProductTypeRefId = 3,
                            Quantity = 20
                        },
                        new
                        {
                            Id = new Guid("772811cd-e96c-41cf-94f4-2406dd7b07ac"),
                            Name = "Набор инструментов Квалитет 5027038",
                            Price = 5699.9m,
                            ProductTypeRefId = 2,
                            Quantity = 9
                        },
                        new
                        {
                            Id = new Guid("fff57134-e573-488b-bd1c-275ce6a3033a"),
                            Name = "Набор инструментов Swiss Tools ST-1077",
                            Price = 5799.99m,
                            ProductTypeRefId = 2,
                            Quantity = 20
                        },
                        new
                        {
                            Id = new Guid("824c826c-980c-48be-bedd-3d1aa5fc2a29"),
                            Name = "Набор инструментов Дело Техники 600937",
                            Price = 3033m,
                            ProductTypeRefId = 2,
                            Quantity = 30
                        },
                        new
                        {
                            Id = new Guid("1effa22a-05e2-43af-8db7-9225e83903be"),
                            Name = "Инструмент для вскрытия техники Rexant 12-4335",
                            Price = 99.99m,
                            ProductTypeRefId = 2,
                            Quantity = 20
                        },
                        new
                        {
                            Id = new Guid("eecd98da-450e-4890-be4c-433a94513557"),
                            Name = "Отвертка с набором насадок Matrix 11598",
                            Price = 110m,
                            ProductTypeRefId = 2,
                            Quantity = 25
                        },
                        new
                        {
                            Id = new Guid("0c04497a-8537-4d21-a325-48d013ef9707"),
                            Name = "Набор инструментов КВТ Профи НИИ-09",
                            Price = 1699m,
                            ProductTypeRefId = 2,
                            Quantity = 10
                        },
                        new
                        {
                            Id = new Guid("bba40a48-aab4-4a47-a6af-82068a1ad39b"),
                            Name = "Паяльная станция Rexant 12-0714",
                            Price = 4399m,
                            ProductTypeRefId = 2,
                            Quantity = 2
                        },
                        new
                        {
                            Id = new Guid("27134bfe-a2af-4c3f-a838-896f98d0ba76"),
                            Name = "Видеорегистратор 70mai Dash Cam M300",
                            Price = 3199.99m,
                            ProductTypeRefId = 1,
                            Quantity = 5
                        },
                        new
                        {
                            Id = new Guid("2f186d0f-8524-47d6-a8d3-ab9036c55d03"),
                            Name = "Адаптер для скрытого подключения видеорегистратора Roadgid Cord DC",
                            Price = 1199m,
                            ProductTypeRefId = 1,
                            Quantity = 10
                        },
                        new
                        {
                            Id = new Guid("3beb3098-b45f-467f-89d4-8673c21da150"),
                            Name = "Камера заднего вида Silverstone F1 Interpower IP-662 LED",
                            Price = 799m,
                            ProductTypeRefId = 1,
                            Quantity = 6
                        },
                        new
                        {
                            Id = new Guid("994f1902-0047-4086-bba3-0c1d9f1008dd"),
                            Name = "Инвертор DEXP CAR 150W",
                            Price = 750m,
                            ProductTypeRefId = 1,
                            Quantity = 0
                        });
                });

            modelBuilder.Entity("OrderingService.Dal.Models.ProductTypeRef", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name");

                    b.ToTable("ProductTypes");

                    b.HasData(
                        new
                        {
                            Id = 0,
                            Description = "Электроника",
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = 1,
                            Description = "Автомобильные товары",
                            Name = "Cars"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Стройматериалы и инструменты",
                            Name = "BuildingMaterialsInstruments"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Всё для дома",
                            Name = "HouseHoldGoods"
                        });
                });

            modelBuilder.Entity("OrderingService.Dal.Models.ClientCredentials", b =>
                {
                    b.HasOne("OrderingService.Dal.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("OrderingService.Dal.Models.Order", b =>
                {
                    b.HasOne("OrderingService.Dal.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("OrderingService.Dal.Models.OrderProduct", b =>
                {
                    b.HasOne("OrderingService.Dal.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OrderingService.Dal.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("OrderingService.Dal.Models.Product", b =>
                {
                    b.HasOne("OrderingService.Dal.Models.ProductTypeRef", "ProductTypeRef")
                        .WithMany()
                        .HasForeignKey("ProductTypeRefId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ProductTypeRef");
                });
#pragma warning restore 612, 618
        }
    }
}
