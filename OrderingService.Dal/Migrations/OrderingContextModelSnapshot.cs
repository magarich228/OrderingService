// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrderingService.Dal;

#nullable disable

namespace OrderingService.Dal.Migrations
{
    [DbContext(typeof(OrderingContext))]
    partial class OrderingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.1.23111.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OrderingService.Dal.Models.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasAlternateKey("Phone");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = new Guid("93ae41c8-bbc4-4b66-b6c2-6cf08cedd3a1"),
                            FullName = "Меркушев Бенедикт Алексеевич",
                            Phone = "89996225028"
                        },
                        new
                        {
                            Id = new Guid("e4e735a0-1afd-4477-a9e3-3fb035dcfc42"),
                            FullName = "Ефимов Аким Лаврентьевич",
                            Phone = "89506225027"
                        },
                        new
                        {
                            Id = new Guid("69ec996e-b3f1-4466-912b-aa95a68678ab"),
                            FullName = "Савин Август Оскарович",
                            Phone = "89506225026"
                        },
                        new
                        {
                            Id = new Guid("6fbcebb9-4289-454f-99a6-4c7d28eaa255"),
                            FullName = "Воронцов Любомир Антонович",
                            Phone = "89906225025"
                        },
                        new
                        {
                            Id = new Guid("34845d57-b256-42a9-bfa6-423ea09bb895"),
                            FullName = "Ларионов Аввакуум Христофорович",
                            Phone = "89506335028"
                        },
                        new
                        {
                            Id = new Guid("e2fd808b-c4c7-454e-8bbf-10d7ca215b7b"),
                            FullName = "Беляков Демьян Степанович",
                            Phone = "89606225028"
                        },
                        new
                        {
                            Id = new Guid("24301acc-a0d7-4f83-875c-7224d7ab4afd"),
                            FullName = "Баранова Марьяна Рудольфовна",
                            Phone = "89506224428"
                        },
                        new
                        {
                            Id = new Guid("4f5e6333-d2d5-4bdc-8055-e363eea16b34"),
                            FullName = "Зайцева Римма Аристарховна",
                            Phone = "89503335028"
                        },
                        new
                        {
                            Id = new Guid("6cf01359-7265-43f2-8126-9d64fedb5c48"),
                            FullName = "Лазарева Лигия Пётровна",
                            Phone = "89506225268"
                        },
                        new
                        {
                            Id = new Guid("7b15078f-2266-46d6-aece-e6a3aeb6f6c4"),
                            FullName = "Фёдорова Асида Федоровна",
                            Phone = "89506225278"
                        },
                        new
                        {
                            Id = new Guid("3629c35e-c45b-4d9d-a643-e2adc228ecd0"),
                            FullName = "Дорофеева Георгина Онисимовна",
                            Phone = "89506330270"
                        });
                });

            modelBuilder.Entity("OrderingService.Dal.Models.ClientCredentials", b =>
                {
                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Login")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("Login");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ClientId", "Login");

                    b.ToTable("ClientCredentials");

                    b.HasData(
                        new
                        {
                            ClientId = new Guid("93ae41c8-bbc4-4b66-b6c2-6cf08cedd3a1"),
                            Login = "user93ae41c8-bbc4-4b66-b6c2-6cf08cedd3a1",
                            Password = "qwe12345"
                        },
                        new
                        {
                            ClientId = new Guid("e4e735a0-1afd-4477-a9e3-3fb035dcfc42"),
                            Login = "usere4e735a0-1afd-4477-a9e3-3fb035dcfc42",
                            Password = "qwe12345"
                        },
                        new
                        {
                            ClientId = new Guid("69ec996e-b3f1-4466-912b-aa95a68678ab"),
                            Login = "user69ec996e-b3f1-4466-912b-aa95a68678ab",
                            Password = "qwe12345"
                        },
                        new
                        {
                            ClientId = new Guid("6fbcebb9-4289-454f-99a6-4c7d28eaa255"),
                            Login = "user6fbcebb9-4289-454f-99a6-4c7d28eaa255",
                            Password = "qwe12345"
                        },
                        new
                        {
                            ClientId = new Guid("34845d57-b256-42a9-bfa6-423ea09bb895"),
                            Login = "user34845d57-b256-42a9-bfa6-423ea09bb895",
                            Password = "qwe12345"
                        },
                        new
                        {
                            ClientId = new Guid("e2fd808b-c4c7-454e-8bbf-10d7ca215b7b"),
                            Login = "usere2fd808b-c4c7-454e-8bbf-10d7ca215b7b",
                            Password = "qwe12345"
                        },
                        new
                        {
                            ClientId = new Guid("24301acc-a0d7-4f83-875c-7224d7ab4afd"),
                            Login = "user24301acc-a0d7-4f83-875c-7224d7ab4afd",
                            Password = "qwe12345"
                        },
                        new
                        {
                            ClientId = new Guid("4f5e6333-d2d5-4bdc-8055-e363eea16b34"),
                            Login = "user4f5e6333-d2d5-4bdc-8055-e363eea16b34",
                            Password = "qwe12345"
                        },
                        new
                        {
                            ClientId = new Guid("6cf01359-7265-43f2-8126-9d64fedb5c48"),
                            Login = "user6cf01359-7265-43f2-8126-9d64fedb5c48",
                            Password = "qwe12345"
                        },
                        new
                        {
                            ClientId = new Guid("7b15078f-2266-46d6-aece-e6a3aeb6f6c4"),
                            Login = "user7b15078f-2266-46d6-aece-e6a3aeb6f6c4",
                            Password = "qwe12345"
                        },
                        new
                        {
                            ClientId = new Guid("3629c35e-c45b-4d9d-a643-e2adc228ecd0"),
                            Login = "user3629c35e-c45b-4d9d-a643-e2adc228ecd0",
                            Password = "qwe12345"
                        });
                });

            modelBuilder.Entity("OrderingService.Dal.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 3, 6, 11, 52, 19, 371, DateTimeKind.Utc).AddTicks(9507));

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c674e4f2-c27f-494b-9ddc-802c3be293ec"),
                            ClientId = new Guid("3629c35e-c45b-4d9d-a643-e2adc228ecd0"),
                            CreatedAt = new DateTime(2023, 9, 2, 11, 52, 18, 774, DateTimeKind.Utc).AddTicks(2851)
                        },
                        new
                        {
                            Id = new Guid("8843c7e7-4606-4266-9d74-96df3a987bdc"),
                            ClientId = new Guid("34845d57-b256-42a9-bfa6-423ea09bb895"),
                            CreatedAt = new DateTime(2022, 10, 12, 11, 52, 18, 774, DateTimeKind.Utc).AddTicks(4213)
                        },
                        new
                        {
                            Id = new Guid("2e118b3f-d274-4b82-87c0-7b0363527d7e"),
                            ClientId = new Guid("34845d57-b256-42a9-bfa6-423ea09bb895"),
                            CreatedAt = new DateTime(2023, 8, 30, 11, 52, 18, 774, DateTimeKind.Utc).AddTicks(4227)
                        },
                        new
                        {
                            Id = new Guid("2f94af7c-e348-4b97-985f-27b0e6e2e3c9"),
                            ClientId = new Guid("24301acc-a0d7-4f83-875c-7224d7ab4afd"),
                            CreatedAt = new DateTime(2022, 4, 1, 11, 52, 18, 774, DateTimeKind.Utc).AddTicks(4230)
                        },
                        new
                        {
                            Id = new Guid("d11bd9ed-3f1c-4908-8643-51c3fdb17c20"),
                            ClientId = new Guid("3629c35e-c45b-4d9d-a643-e2adc228ecd0"),
                            CreatedAt = new DateTime(2023, 10, 25, 11, 52, 18, 774, DateTimeKind.Utc).AddTicks(4231)
                        },
                        new
                        {
                            Id = new Guid("c8042be5-25fc-4646-a341-e393b3701843"),
                            ClientId = new Guid("6cf01359-7265-43f2-8126-9d64fedb5c48"),
                            CreatedAt = new DateTime(2022, 2, 11, 11, 52, 18, 774, DateTimeKind.Utc).AddTicks(4237)
                        },
                        new
                        {
                            Id = new Guid("9d21f72d-b841-4a3d-8c34-c546aef9fba4"),
                            ClientId = new Guid("6fbcebb9-4289-454f-99a6-4c7d28eaa255"),
                            CreatedAt = new DateTime(2022, 7, 16, 11, 52, 18, 774, DateTimeKind.Utc).AddTicks(4239)
                        },
                        new
                        {
                            Id = new Guid("b6d6d453-a060-4bdd-81bf-c62f431d7716"),
                            ClientId = new Guid("7b15078f-2266-46d6-aece-e6a3aeb6f6c4"),
                            CreatedAt = new DateTime(2024, 2, 14, 11, 52, 18, 774, DateTimeKind.Utc).AddTicks(4240)
                        },
                        new
                        {
                            Id = new Guid("40a6a28e-92d5-42bf-af85-88ad87035c2e"),
                            ClientId = new Guid("e2fd808b-c4c7-454e-8bbf-10d7ca215b7b"),
                            CreatedAt = new DateTime(2024, 2, 4, 11, 52, 18, 774, DateTimeKind.Utc).AddTicks(4242)
                        },
                        new
                        {
                            Id = new Guid("cef5fc99-4456-414c-9f4a-068ceac2f110"),
                            ClientId = new Guid("6fbcebb9-4289-454f-99a6-4c7d28eaa255"),
                            CreatedAt = new DateTime(2023, 12, 30, 11, 52, 18, 774, DateTimeKind.Utc).AddTicks(4244)
                        },
                        new
                        {
                            Id = new Guid("5be70fc8-50b0-44ef-a2c4-c1f1f97bac97"),
                            ClientId = new Guid("93ae41c8-bbc4-4b66-b6c2-6cf08cedd3a1"),
                            CreatedAt = new DateTime(2023, 10, 19, 11, 52, 18, 774, DateTimeKind.Utc).AddTicks(4248)
                        },
                        new
                        {
                            Id = new Guid("5ac37dd9-cd4c-4261-931b-4646cbd37e9e"),
                            ClientId = new Guid("93ae41c8-bbc4-4b66-b6c2-6cf08cedd3a1"),
                            CreatedAt = new DateTime(2023, 7, 17, 11, 52, 18, 774, DateTimeKind.Utc).AddTicks(4250)
                        },
                        new
                        {
                            Id = new Guid("70b4f701-15f0-48be-8d33-44d4a243ac48"),
                            ClientId = new Guid("e4e735a0-1afd-4477-a9e3-3fb035dcfc42"),
                            CreatedAt = new DateTime(2022, 9, 22, 11, 52, 18, 774, DateTimeKind.Utc).AddTicks(4251)
                        },
                        new
                        {
                            Id = new Guid("40d6d128-cee5-4bc9-ae64-f0f0218764be"),
                            ClientId = new Guid("6fbcebb9-4289-454f-99a6-4c7d28eaa255"),
                            CreatedAt = new DateTime(2023, 2, 15, 11, 52, 18, 774, DateTimeKind.Utc).AddTicks(4253)
                        },
                        new
                        {
                            Id = new Guid("222d16e7-295b-4788-ad68-3d462d0ae470"),
                            ClientId = new Guid("e4e735a0-1afd-4477-a9e3-3fb035dcfc42"),
                            CreatedAt = new DateTime(2023, 12, 15, 11, 52, 18, 774, DateTimeKind.Utc).AddTicks(4255)
                        },
                        new
                        {
                            Id = new Guid("47403a9a-5935-492e-b4ec-7bb7dce3053d"),
                            ClientId = new Guid("93ae41c8-bbc4-4b66-b6c2-6cf08cedd3a1"),
                            CreatedAt = new DateTime(2024, 1, 14, 11, 52, 18, 774, DateTimeKind.Utc).AddTicks(4256)
                        },
                        new
                        {
                            Id = new Guid("58cc1aad-045a-44f8-9ce3-7aa599b58123"),
                            ClientId = new Guid("24301acc-a0d7-4f83-875c-7224d7ab4afd"),
                            CreatedAt = new DateTime(2023, 7, 17, 11, 52, 18, 774, DateTimeKind.Utc).AddTicks(4258)
                        },
                        new
                        {
                            Id = new Guid("ef868a54-7ba6-42a1-b38d-7e094e45bbae"),
                            ClientId = new Guid("3629c35e-c45b-4d9d-a643-e2adc228ecd0"),
                            CreatedAt = new DateTime(2023, 1, 27, 11, 52, 18, 774, DateTimeKind.Utc).AddTicks(4260)
                        },
                        new
                        {
                            Id = new Guid("584386a9-ecb5-4e36-b8b6-bf591d0133a0"),
                            ClientId = new Guid("4f5e6333-d2d5-4bdc-8055-e363eea16b34"),
                            CreatedAt = new DateTime(2023, 8, 18, 11, 52, 18, 774, DateTimeKind.Utc).AddTicks(4263)
                        },
                        new
                        {
                            Id = new Guid("400b8f66-95d2-4631-857b-43777dbd4b0d"),
                            ClientId = new Guid("34845d57-b256-42a9-bfa6-423ea09bb895"),
                            CreatedAt = new DateTime(2023, 2, 24, 11, 52, 18, 774, DateTimeKind.Utc).AddTicks(4265)
                        },
                        new
                        {
                            Id = new Guid("ca056694-41a9-41c3-a18f-6ca6608b168f"),
                            ClientId = new Guid("7b15078f-2266-46d6-aece-e6a3aeb6f6c4"),
                            CreatedAt = new DateTime(2023, 8, 14, 11, 52, 18, 774, DateTimeKind.Utc).AddTicks(4267)
                        },
                        new
                        {
                            Id = new Guid("4bf0bdd0-b95d-4975-b062-289db0894617"),
                            ClientId = new Guid("34845d57-b256-42a9-bfa6-423ea09bb895"),
                            CreatedAt = new DateTime(2023, 8, 26, 11, 52, 18, 774, DateTimeKind.Utc).AddTicks(4268)
                        });
                });

            modelBuilder.Entity("OrderingService.Dal.Models.OrderProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductsInOrders", t =>
                        {
                            t.HasCheckConstraint("Price", "Price > 0");

                            t.HasCheckConstraint("Quantity", "Quantity >= 0");
                        });

                    b.HasData(
                        new
                        {
                            Id = new Guid("97fb55bb-1df5-480f-ab80-502bb62ad863"),
                            OrderId = new Guid("8843c7e7-4606-4266-9d74-96df3a987bdc"),
                            Price = 4796m,
                            ProductId = new Guid("14417564-1fd4-4803-b1b1-0288145f258e"),
                            Quantity = 4
                        },
                        new
                        {
                            Id = new Guid("21548ab9-aa92-47f7-9a0b-718a98cc2a21"),
                            OrderId = new Guid("8843c7e7-4606-4266-9d74-96df3a987bdc"),
                            Price = 799.96m,
                            ProductId = new Guid("be0dce3a-07ee-4b53-a9f4-79e626b5ef3d"),
                            Quantity = 4
                        },
                        new
                        {
                            Id = new Guid("9a8a093f-a197-47d6-a852-bc2b6a80d38b"),
                            OrderId = new Guid("8843c7e7-4606-4266-9d74-96df3a987bdc"),
                            Price = 220m,
                            ProductId = new Guid("c1b502a5-27e5-48b6-a424-449e759a2179"),
                            Quantity = 2
                        },
                        new
                        {
                            Id = new Guid("08e1c926-b739-4fa7-9204-ff25ffe84011"),
                            OrderId = new Guid("2e118b3f-d274-4b82-87c0-7b0363527d7e"),
                            Price = 1500m,
                            ProductId = new Guid("4ab47776-5c78-4876-9ad3-d0185b0ae5c8"),
                            Quantity = 2
                        },
                        new
                        {
                            Id = new Guid("f41989d8-bb15-413e-9769-611db72dfc23"),
                            OrderId = new Guid("c8042be5-25fc-4646-a341-e393b3701843"),
                            Price = 799.96m,
                            ProductId = new Guid("23012394-ff43-4b0b-8c2c-a85a420449ca"),
                            Quantity = 4
                        },
                        new
                        {
                            Id = new Guid("27794d80-5897-4221-a413-59757662b78a"),
                            OrderId = new Guid("c8042be5-25fc-4646-a341-e393b3701843"),
                            Price = 250m,
                            ProductId = new Guid("2088847f-7b60-43e6-a8c8-3894b83b14b9"),
                            Quantity = 5
                        },
                        new
                        {
                            Id = new Guid("0b0670bb-4e70-4a89-8e69-6f24438852b2"),
                            OrderId = new Guid("9d21f72d-b841-4a3d-8c34-c546aef9fba4"),
                            Price = 220m,
                            ProductId = new Guid("c1b502a5-27e5-48b6-a424-449e759a2179"),
                            Quantity = 2
                        },
                        new
                        {
                            Id = new Guid("b685609a-5f06-405a-b7e6-4d051daf2a1c"),
                            OrderId = new Guid("9d21f72d-b841-4a3d-8c34-c546aef9fba4"),
                            Price = 22799.6m,
                            ProductId = new Guid("3ffed479-1dfc-41a3-8836-87ef1a547f76"),
                            Quantity = 4
                        },
                        new
                        {
                            Id = new Guid("821e56ab-170d-41b2-8ff7-0b1fa86f64fe"),
                            OrderId = new Guid("9d21f72d-b841-4a3d-8c34-c546aef9fba4"),
                            Price = 110m,
                            ProductId = new Guid("c1b502a5-27e5-48b6-a424-449e759a2179"),
                            Quantity = 1
                        },
                        new
                        {
                            Id = new Guid("b02539df-96c7-4f26-b5d0-ffc0cb0d1898"),
                            OrderId = new Guid("40a6a28e-92d5-42bf-af85-88ad87035c2e"),
                            Price = 3995m,
                            ProductId = new Guid("f0086139-f0bd-412d-8e32-fc483f8f8e2d"),
                            Quantity = 5
                        },
                        new
                        {
                            Id = new Guid("822e5635-550e-47ff-9964-0cd63a06fd2f"),
                            OrderId = new Guid("40a6a28e-92d5-42bf-af85-88ad87035c2e"),
                            Price = 799m,
                            ProductId = new Guid("f0086139-f0bd-412d-8e32-fc483f8f8e2d"),
                            Quantity = 1
                        },
                        new
                        {
                            Id = new Guid("4a8ee7d8-59a2-42c4-811b-5295b7635acc"),
                            OrderId = new Guid("cef5fc99-4456-414c-9f4a-068ceac2f110"),
                            Price = 202591.50m,
                            ProductId = new Guid("a5f2e7c7-c0f0-4f97-a14d-02b43df393bb"),
                            Quantity = 3
                        },
                        new
                        {
                            Id = new Guid("f3806747-b0af-4b01-bd26-a596615a6077"),
                            OrderId = new Guid("cef5fc99-4456-414c-9f4a-068ceac2f110"),
                            Price = 440m,
                            ProductId = new Guid("c1b502a5-27e5-48b6-a424-449e759a2179"),
                            Quantity = 4
                        },
                        new
                        {
                            Id = new Guid("37791897-aa9a-4f0b-b216-d88924556b3c"),
                            OrderId = new Guid("5be70fc8-50b0-44ef-a2c4-c1f1f97bac97"),
                            Price = 45597m,
                            ProductId = new Guid("58e276f3-2cd4-4b69-beda-50107b4a58f7"),
                            Quantity = 3
                        },
                        new
                        {
                            Id = new Guid("0e1b3893-58cd-4c45-a5f2-af0b9b6c8e5f"),
                            OrderId = new Guid("222d16e7-295b-4788-ad68-3d462d0ae470"),
                            Price = 3199.99m,
                            ProductId = new Guid("9fc9e275-e0c1-4d70-82ed-aec1db7f5668"),
                            Quantity = 1
                        },
                        new
                        {
                            Id = new Guid("b3ca0bd4-ae38-4040-84f7-b7ca80c9fe35"),
                            OrderId = new Guid("222d16e7-295b-4788-ad68-3d462d0ae470"),
                            Price = 9599.97m,
                            ProductId = new Guid("9fc9e275-e0c1-4d70-82ed-aec1db7f5668"),
                            Quantity = 3
                        },
                        new
                        {
                            Id = new Guid("8ed3493e-bcc8-4043-a571-622f62bbd5f4"),
                            OrderId = new Guid("47403a9a-5935-492e-b4ec-7bb7dce3053d"),
                            Price = 23199.96m,
                            ProductId = new Guid("38d5bbdf-8d26-4a4e-a1b4-4cf31f95d0be"),
                            Quantity = 4
                        },
                        new
                        {
                            Id = new Guid("d44364a6-e4bb-46c6-bbf9-65986ab28617"),
                            OrderId = new Guid("58cc1aad-045a-44f8-9ce3-7aa599b58123"),
                            Price = 49499.99m,
                            ProductId = new Guid("80eaf80b-2672-44d9-97a5-b183b83f622b"),
                            Quantity = 1
                        },
                        new
                        {
                            Id = new Guid("039d2ecc-63f6-4b72-9f24-d5f3f7abcd03"),
                            OrderId = new Guid("584386a9-ecb5-4e36-b8b6-bf591d0133a0"),
                            Price = 337652.50m,
                            ProductId = new Guid("a5f2e7c7-c0f0-4f97-a14d-02b43df393bb"),
                            Quantity = 5
                        },
                        new
                        {
                            Id = new Guid("99058b4d-0f24-47e0-8b50-70fb22b8af96"),
                            OrderId = new Guid("400b8f66-95d2-4631-857b-43777dbd4b0d"),
                            Price = 46399.8m,
                            ProductId = new Guid("62412ecf-2c2e-4724-b784-58affd99d590"),
                            Quantity = 2
                        },
                        new
                        {
                            Id = new Guid("d607848e-53cc-4b9c-b0fc-cdf2dacd5f9b"),
                            OrderId = new Guid("400b8f66-95d2-4631-857b-43777dbd4b0d"),
                            Price = 202591.50m,
                            ProductId = new Guid("a5f2e7c7-c0f0-4f97-a14d-02b43df393bb"),
                            Quantity = 3
                        },
                        new
                        {
                            Id = new Guid("bbed8827-79ca-470f-a2ac-0b7f4a618448"),
                            OrderId = new Guid("ca056694-41a9-41c3-a18f-6ca6608b168f"),
                            Price = 45597m,
                            ProductId = new Guid("58e276f3-2cd4-4b69-beda-50107b4a58f7"),
                            Quantity = 3
                        },
                        new
                        {
                            Id = new Guid("9867d55a-c0f9-44ab-b744-7381ad97d32c"),
                            OrderId = new Guid("4bf0bdd0-b95d-4975-b062-289db0894617"),
                            Price = 46399.8m,
                            ProductId = new Guid("62412ecf-2c2e-4724-b784-58affd99d590"),
                            Quantity = 2
                        },
                        new
                        {
                            Id = new Guid("3db8096a-dff0-4342-b2c1-0e5f2bcacb6d"),
                            OrderId = new Guid("4bf0bdd0-b95d-4975-b062-289db0894617"),
                            Price = 2398m,
                            ProductId = new Guid("14417564-1fd4-4803-b1b1-0288145f258e"),
                            Quantity = 2
                        });
                });

            modelBuilder.Entity("OrderingService.Dal.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductTypeRefId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name");

                    b.HasIndex("ProductTypeRefId");

                    b.ToTable("Products", t =>
                        {
                            t.HasCheckConstraint("Price", "Price > 0")
                                .HasName("Price1");

                            t.HasCheckConstraint("Quantity", "Quantity >= 0")
                                .HasName("Quantity1");
                        });

                    b.HasData(
                        new
                        {
                            Id = new Guid("a5f2e7c7-c0f0-4f97-a14d-02b43df393bb"),
                            Name = "IPhone 8s",
                            Price = 67530.50m,
                            ProductTypeRefId = 0,
                            Quantity = 12
                        },
                        new
                        {
                            Id = new Guid("716b356f-af3c-4ee2-b0fb-3f8dbc21fad7"),
                            Name = "ASUS VivoBook 16X M1603QA",
                            Price = 51699m,
                            ProductTypeRefId = 0,
                            Quantity = 11
                        },
                        new
                        {
                            Id = new Guid("58e276f3-2cd4-4b69-beda-50107b4a58f7"),
                            Name = "LED Harper 43F660Y",
                            Price = 15199m,
                            ProductTypeRefId = 0,
                            Quantity = 6
                        },
                        new
                        {
                            Id = new Guid("62412ecf-2c2e-4724-b784-58affd99d590"),
                            Name = "LET Prestigio PTV50SS08X",
                            Price = 23199.9m,
                            ProductTypeRefId = 0,
                            Quantity = 7
                        },
                        new
                        {
                            Id = new Guid("fec58d60-4d6a-4dd5-bde3-f4adc35db9f7"),
                            Name = "AMD Ryzen 7 4700G OEM",
                            Price = 15499.99m,
                            ProductTypeRefId = 0,
                            Quantity = 20
                        },
                        new
                        {
                            Id = new Guid("23012394-ff43-4b0b-8c2c-a85a420449ca"),
                            Name = "Швабра Master House Бачата",
                            Price = 199.99m,
                            ProductTypeRefId = 3,
                            Quantity = 33
                        },
                        new
                        {
                            Id = new Guid("be0dce3a-07ee-4b53-a9f4-79e626b5ef3d"),
                            Name = "Швабра Master House Джайв",
                            Price = 199.99m,
                            ProductTypeRefId = 3,
                            Quantity = 21
                        },
                        new
                        {
                            Id = new Guid("2088847f-7b60-43e6-a8c8-3894b83b14b9"),
                            Name = "Чистящее средство для нагревательных элементов электроплит/газовых плит Topper IR 5",
                            Price = 50m,
                            ProductTypeRefId = 3,
                            Quantity = 0
                        },
                        new
                        {
                            Id = new Guid("db2a4e37-9cdb-43b2-84f5-755b96751d51"),
                            Name = "Набор для ухода для стеклокерамических поверхностей Fiora bio ЭКО 20-002",
                            Price = 199m,
                            ProductTypeRefId = 3,
                            Quantity = 5
                        },
                        new
                        {
                            Id = new Guid("79df991c-0ef9-44de-b582-f443190732ec"),
                            Name = "Очиститель для тканей и мебели ОС-Гель",
                            Price = 280m,
                            ProductTypeRefId = 3,
                            Quantity = 15
                        },
                        new
                        {
                            Id = new Guid("80eaf80b-2672-44d9-97a5-b183b83f622b"),
                            Name = "Газонокосилка-робот Champion RMB1828",
                            Price = 49499.99m,
                            ProductTypeRefId = 3,
                            Quantity = 8
                        },
                        new
                        {
                            Id = new Guid("99f346aa-bf0e-49d4-a505-b2f1f14a4ade"),
                            Name = "ТВ розетка одинарная Schneider Electric Glossa GSL000391",
                            Price = 199.99m,
                            ProductTypeRefId = 3,
                            Quantity = 20
                        },
                        new
                        {
                            Id = new Guid("3ffed479-1dfc-41a3-8836-87ef1a547f76"),
                            Name = "Набор инструментов Квалитет 5027038",
                            Price = 5699.9m,
                            ProductTypeRefId = 2,
                            Quantity = 9
                        },
                        new
                        {
                            Id = new Guid("38d5bbdf-8d26-4a4e-a1b4-4cf31f95d0be"),
                            Name = "Набор инструментов Swiss Tools ST-1077",
                            Price = 5799.99m,
                            ProductTypeRefId = 2,
                            Quantity = 20
                        },
                        new
                        {
                            Id = new Guid("e3249465-c56a-4b03-919a-6cb07d16c118"),
                            Name = "Набор инструментов Дело Техники 600937",
                            Price = 3033m,
                            ProductTypeRefId = 2,
                            Quantity = 30
                        },
                        new
                        {
                            Id = new Guid("eb4415c7-3206-4ff2-af1e-505768ae76c1"),
                            Name = "Инструмент для вскрытия техники Rexant 12-4335",
                            Price = 99.99m,
                            ProductTypeRefId = 2,
                            Quantity = 20
                        },
                        new
                        {
                            Id = new Guid("c1b502a5-27e5-48b6-a424-449e759a2179"),
                            Name = "Отвертка с набором насадок Matrix 11598",
                            Price = 110m,
                            ProductTypeRefId = 2,
                            Quantity = 25
                        },
                        new
                        {
                            Id = new Guid("6d3de57c-711d-4305-8602-c9f12327a135"),
                            Name = "Набор инструментов КВТ Профи НИИ-09",
                            Price = 1699m,
                            ProductTypeRefId = 2,
                            Quantity = 10
                        },
                        new
                        {
                            Id = new Guid("be01b729-1c56-4f3a-84c0-83f3790969fb"),
                            Name = "Паяльная станция Rexant 12-0714",
                            Price = 4399m,
                            ProductTypeRefId = 2,
                            Quantity = 2
                        },
                        new
                        {
                            Id = new Guid("9fc9e275-e0c1-4d70-82ed-aec1db7f5668"),
                            Name = "Видеорегистратор 70mai Dash Cam M300",
                            Price = 3199.99m,
                            ProductTypeRefId = 1,
                            Quantity = 5
                        },
                        new
                        {
                            Id = new Guid("14417564-1fd4-4803-b1b1-0288145f258e"),
                            Name = "Адаптер для скрытого подключения видеорегистратора Roadgid Cord DC",
                            Price = 1199m,
                            ProductTypeRefId = 1,
                            Quantity = 10
                        },
                        new
                        {
                            Id = new Guid("f0086139-f0bd-412d-8e32-fc483f8f8e2d"),
                            Name = "Камера заднего вида Silverstone F1 Interpower IP-662 LED",
                            Price = 799m,
                            ProductTypeRefId = 1,
                            Quantity = 6
                        },
                        new
                        {
                            Id = new Guid("4ab47776-5c78-4876-9ad3-d0185b0ae5c8"),
                            Name = "Инвертор DEXP CAR 150W",
                            Price = 750m,
                            ProductTypeRefId = 1,
                            Quantity = 0
                        });
                });

            modelBuilder.Entity("OrderingService.Dal.Models.ProductTypeRef", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name");

                    b.ToTable("ProductTypes");

                    b.HasData(
                        new
                        {
                            Id = 0,
                            Description = "Электроника",
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = 1,
                            Description = "Автомобильные товары",
                            Name = "Cars"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Стройматериалы и инструменты",
                            Name = "BuildingMaterialsInstruments"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Всё для дома",
                            Name = "HouseHoldGoods"
                        });
                });

            modelBuilder.Entity("OrderingService.Dal.Models.ClientCredentials", b =>
                {
                    b.HasOne("OrderingService.Dal.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("OrderingService.Dal.Models.Order", b =>
                {
                    b.HasOne("OrderingService.Dal.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("OrderingService.Dal.Models.OrderProduct", b =>
                {
                    b.HasOne("OrderingService.Dal.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OrderingService.Dal.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("OrderingService.Dal.Models.Product", b =>
                {
                    b.HasOne("OrderingService.Dal.Models.ProductTypeRef", "ProductTypeRef")
                        .WithMany()
                        .HasForeignKey("ProductTypeRefId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ProductTypeRef");
                });
#pragma warning restore 612, 618
        }
    }
}
